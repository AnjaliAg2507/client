{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport './styles/Quiz.css';\nimport Score from './Score';\nimport axios from 'axios';\nvar Quiz = function Quiz() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showScore = _useState6[0],\n    setShowScore = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    score = _useState8[0],\n    setScore = _useState8[1];\n  useEffect(function () {\n    // Make an HTTP GET request to your backend API endpoint\n    axios.get('http://localhost:8000/api/questions').then(function (response) {\n      // Set the questions state variable to the data retrieved from the API\n      setQuestions(_.shuffle(response.data));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var handleAnswerOptionClick = function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  /*return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} />\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            \n            <div className=\"question-text\">{questions[currentQuestion]?.question}</div>\n           \n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion]?.options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion]?.answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );*/\n};\n\nexport default Quiz;","map":{"version":3,"names":["React","useState","useEffect","_","Link","Score","axios","Quiz","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","score","setScore","get","then","response","shuffle","data","catch","error","console","log","handleAnswerOptionClick","isCorrect","nextQuestion","length"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport './styles/Quiz.css';\nimport Score from './Score';\nimport axios from 'axios';\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    // Make an HTTP GET request to your backend API endpoint\n    axios.get('http://localhost:8000/api/questions')\n      .then(response => {\n        // Set the questions state variable to the data retrieved from the API\n        setQuestions(_.shuffle(response.data));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  /*return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} />\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            \n            <div className=\"question-text\">{questions[currentQuestion]?.question}</div>\n           \n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion]?.options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion]?.answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );*/\n};\n\nexport default Quiz;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACiBP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACgBZ,QAAQ,CAAC,CAAC,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACRhB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACJpB,QAAQ,CAAC,CAAC,CAAC;IAAAqB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA9BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtBpB,SAAS,CAAC,YAAM;IACd;IACAI,KAAK,CAACmB,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChB;MACAf,YAAY,CAACT,CAAC,CAACyB,OAAO,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,SAAS,EAAK;IAC7C,IAAIA,SAAS,EAAE;MACbX,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IAEA,IAAMa,YAAY,GAAGrB,eAAe,GAAG,CAAC;IACxC,IAAIqB,YAAY,GAAGzB,SAAS,CAAC0B,MAAM,EAAE;MACnCrB,kBAAkB,CAACoB,YAAY,CAAC;IAClC,CAAC,MAAM;MACLhB,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,eAAeb,IAAI"},"metadata":{},"sourceType":"module"}