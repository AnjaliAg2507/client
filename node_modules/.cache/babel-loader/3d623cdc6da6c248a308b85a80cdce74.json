{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/StudentLogin.js\";\n/*import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/StudentLogin.css';\n\nfunction StudentLogin() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handleIdChange = (event) => {\n    setId(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleLogin = () => {\n    // TODO: Implement login logic\n  };\n\n  const handleSignup = () => {\n    // TODO: Implement signup logic\n  };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <h1 className=\"title\">{isLogin ? 'Login' : 'Signup'}</h1>\n        {isLogin ? null : (\n          <div className=\"input-group\">\n            <label className=\"label\">Student Name:</label>\n            <input className=\"input\" type=\"text\" value={username} onChange={handleUsernameChange} />\n          </div>\n        )}\n        <div className=\"input-group\">\n          <label className=\"label\">Unique ID:</label>\n          <input className=\"input\" type=\"text\" value={id} onChange={handleIdChange} />\n        </div>\n        <div className=\"input-group\">\n          <label className=\"label\">Password:</label>\n          <input className=\"input\" type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        {!isLogin && (\n          <div className=\"input-group\">\n            <label className=\"label\">Confirm Password:</label>\n            <input className=\"input\" type=\"password\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\n          </div>\n        )}\n        {isLogin ? (\n          <button className=\"button\" type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n        ) : (\n          <button className=\"button\" type=\"button\" onClick={handleSignup}>\n            Signup\n          </button>\n        )}\n        {isLogin ? (\n          <p className=\"message\">\n            Don't have an account? <Link to=\"#\" onClick={toggleForm}>Signup</Link>\n          </p>\n        ) : (\n          <p className=\"message\">\n            Already have an account? <Link to=\"#\" onClick={toggleForm}>Login</Link>\n          </p>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default StudentLogin;*/\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './styles/StudentLogin.css';\nfunction StudentLogin() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    rollNumber = _useState2[0],\n    setRollNumber = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    studentName = _useState4[0],\n    setStudentName = _useState4[1];\n  var history = useHistory();\n  var handleRollNumberChange = function handleRollNumberChange(event) {\n    setRollNumber(event.target.value);\n  };\n  var handleStudentNameChange = function handleStudentNameChange(event) {\n    setStudentName(event.target.value);\n  };\n  var handleLogin = function handleLogin() {\n    if (rollNumber.trim() !== '' && studentName.trim() !== '') {\n      // Login successful, redirect to student homepage\n      history.push('/quiz');\n    } else {\n      // Login failed, clear input fields\n      setRollNumber('');\n      setStudentName('');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Roll Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: rollNumber,\n    onChange: handleRollNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Student Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    value: studentName,\n    onChange: handleStudentNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"button\",\n    onClick: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Attempt Quiz !\")));\n}\nexport default StudentLogin;","map":{"version":3,"names":["React","useState","useHistory","StudentLogin","_useState","_useState2","_slicedToArray","rollNumber","setRollNumber","_useState3","_useState4","studentName","setStudentName","history","handleRollNumberChange","event","target","value","handleStudentNameChange","handleLogin","trim","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/StudentLogin.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/StudentLogin.css';\n\nfunction StudentLogin() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handleIdChange = (event) => {\n    setId(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleLogin = () => {\n    // TODO: Implement login logic\n  };\n\n  const handleSignup = () => {\n    // TODO: Implement signup logic\n  };\n\n  const toggleForm = () => {\n    setIsLogin(!isLogin);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <h1 className=\"title\">{isLogin ? 'Login' : 'Signup'}</h1>\n        {isLogin ? null : (\n          <div className=\"input-group\">\n            <label className=\"label\">Student Name:</label>\n            <input className=\"input\" type=\"text\" value={username} onChange={handleUsernameChange} />\n          </div>\n        )}\n        <div className=\"input-group\">\n          <label className=\"label\">Unique ID:</label>\n          <input className=\"input\" type=\"text\" value={id} onChange={handleIdChange} />\n        </div>\n        <div className=\"input-group\">\n          <label className=\"label\">Password:</label>\n          <input className=\"input\" type=\"password\" value={password} onChange={handlePasswordChange} />\n        </div>\n        {!isLogin && (\n          <div className=\"input-group\">\n            <label className=\"label\">Confirm Password:</label>\n            <input className=\"input\" type=\"password\" value={confirmPassword} onChange={handleConfirmPasswordChange} />\n          </div>\n        )}\n        {isLogin ? (\n          <button className=\"button\" type=\"button\" onClick={handleLogin}>\n            Login\n          </button>\n        ) : (\n          <button className=\"button\" type=\"button\" onClick={handleSignup}>\n            Signup\n          </button>\n        )}\n        {isLogin ? (\n          <p className=\"message\">\n            Don't have an account? <Link to=\"#\" onClick={toggleForm}>Signup</Link>\n          </p>\n        ) : (\n          <p className=\"message\">\n            Already have an account? <Link to=\"#\" onClick={toggleForm}>Login</Link>\n          </p>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default StudentLogin;*/\n\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './styles/StudentLogin.css';\n\nfunction StudentLogin() {\n  const [rollNumber, setRollNumber] = useState('');\n  const [studentName, setStudentName] = useState('');\n  const history = useHistory();\n\n  const handleRollNumberChange = (event) => {\n    setRollNumber(event.target.value);\n  };\n\n  const handleStudentNameChange = (event) => {\n    setStudentName(event.target.value);\n  };\n\n  const handleLogin = () => {\n    if (rollNumber.trim() !== '' && studentName.trim() !== '') {\n      // Login successful, redirect to student homepage\n      history.push('/quiz');\n    } else {\n      // Login failed, clear input fields\n      setRollNumber('');\n      setStudentName('');\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <h1 className=\"title\">Login</h1>\n        <div className=\"input-group\">\n          <label className=\"label\">Roll Number:</label>\n          <input className=\"input\" type=\"text\" value={rollNumber} onChange={handleRollNumberChange} />\n        </div>\n        <div className=\"input-group\">\n          <label className=\"label\">Student Name:</label>\n          <input className=\"input\" type=\"text\" value={studentName} onChange={handleStudentNameChange} />\n        </div>\n        <button className=\"button\" type=\"button\" onClick={handleLogin}>\n          Attempt Quiz !\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default StudentLogin;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}