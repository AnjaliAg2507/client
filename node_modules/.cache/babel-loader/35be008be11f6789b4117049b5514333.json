{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\n\n/*\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n\n    let contentHeight = pdfHeight + 10; // declare contentHeight using let keyword\n    const pageHeight = pdf.internal.pageSize.getHeight();\n\n    while (contentHeight > pageHeight) {\n      pdf.addPage();\n      const position = 10 - pageHeight;\n      pdf.addImage(imgData, 'PNG', 10, position, pdfWidth, pdfHeight);\n      contentHeight -= pageHeight; // update contentHeight variable's value\n    }\n\n    pdf.save('dashboard.pdf');\n  });\n};\n*/\nvar generatePdf = function generatePdf() {\n  var input = document.querySelector('#pdf-content');\n  html2canvas(input).then(function (canvas) {\n    var imgData = canvas.toDataURL('image/png');\n    var pdf = new jsPDF();\n    var imgProps = pdf.getImageProperties(imgData);\n    var pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    var pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n\n    // Split the PDF into multiple pages, one for each component\n    var components = input.children;\n    var _loop = function _loop(i) {\n      var component = components[i];\n      html2canvas(component).then(function (componentCanvas) {\n        var componentImgData = componentCanvas.toDataURL('image/png');\n        var componentImgProps = pdf.getImageProperties(componentImgData);\n        var componentPdfHeight = componentImgProps.height * pdfWidth / componentImgProps.width;\n\n        // Center the image horizontally and vertically\n        var xPos = (pdfWidth - componentImgProps.width) / 2 + 10; // Add 10 to leave a margin\n        var yPos = (pdf.internal.pageSize.getHeight() - componentPdfHeight) / 2;\n        pdf.addImage(componentImgData, 'PNG', xPos, yPos, pdfWidth, componentPdfHeight);\n        var contentHeight = componentPdfHeight + 10;\n        var pageHeight = pdf.internal.pageSize.getHeight();\n        while (contentHeight > pageHeight) {\n          pdf.addPage();\n\n          // Recalculate the position for the new page\n          var position = 10 - pageHeight;\n          var _xPos = (pdfWidth - componentImgProps.width) / 2 + 10; // Add 10 to leave a margin\n          var _yPos = position + (pdf.internal.pageSize.getHeight() - componentPdfHeight) / 2;\n          pdf.addImage(componentImgData, 'PNG', _xPos, _yPos, pdfWidth, componentPdfHeight);\n          contentHeight -= pageHeight;\n        }\n        if (i < components.length - 1) {\n          pdf.addPage();\n        } else {\n          pdf.save('dashboard.pdf');\n        }\n      });\n    };\n    for (var i = 0; i < components.length; i++) {\n      _loop(i);\n    }\n  });\n};\nvar Dashboard = function Dashboard() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"pdf-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Analysis Report\"), /*#__PURE__*/React.createElement(ScoreDistribution, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PassFailRate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TopicwiseTopPerformers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/scoreboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 32\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generatePdf,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Download PDF\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 22\n    }\n  }, \"Logout\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","html2canvas","jsPDF","Link","ScoreDistribution","PassFailRate","TopicwiseTopPerformers","generatePdf","input","document","querySelector","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","components","children","_loop","i","component","componentCanvas","componentImgData","componentImgProps","componentPdfHeight","xPos","yPos","getHeight","addImage","contentHeight","pageHeight","addPage","position","length","save","Dashboard","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","to","onClick"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\n\n/*\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n\n    let contentHeight = pdfHeight + 10; // declare contentHeight using let keyword\n    const pageHeight = pdf.internal.pageSize.getHeight();\n\n    while (contentHeight > pageHeight) {\n      pdf.addPage();\n      const position = 10 - pageHeight;\n      pdf.addImage(imgData, 'PNG', 10, position, pdfWidth, pdfHeight);\n      contentHeight -= pageHeight; // update contentHeight variable's value\n    }\n\n    pdf.save('dashboard.pdf');\n  });\n};\n*/\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    // Split the PDF into multiple pages, one for each component\n    const components = input.children;\n    for (let i = 0; i < components.length; i++) {\n      const component = components[i];\n      html2canvas(component).then((componentCanvas) => {\n        const componentImgData = componentCanvas.toDataURL('image/png');\n        const componentImgProps = pdf.getImageProperties(componentImgData);\n        const componentPdfHeight = (componentImgProps.height * pdfWidth) / componentImgProps.width;\n\n        // Center the image horizontally and vertically\n        const xPos = (pdfWidth - componentImgProps.width) / 2 + 10; // Add 10 to leave a margin\n        const yPos = (pdf.internal.pageSize.getHeight() - componentPdfHeight) / 2;\n\n        pdf.addImage(componentImgData, 'PNG', xPos, yPos, pdfWidth, componentPdfHeight);\n\n        let contentHeight = componentPdfHeight + 10;\n        const pageHeight = pdf.internal.pageSize.getHeight();\n\n        while (contentHeight > pageHeight) {\n          pdf.addPage();\n\n          // Recalculate the position for the new page\n          const position = 10 - pageHeight;\n          const xPos = (pdfWidth - componentImgProps.width) / 2 + 10; // Add 10 to leave a margin\n          const yPos = position + (pdf.internal.pageSize.getHeight() - componentPdfHeight) / 2;\n\n          pdf.addImage(componentImgData, 'PNG', xPos, yPos, pdfWidth, componentPdfHeight);\n          contentHeight -= pageHeight;\n        }\n\n        if (i < components.length - 1) {\n          pdf.addPage();\n        } else {\n          pdf.save('dashboard.pdf');\n        }\n      });\n    }\n  });\n};\n\n\nconst Dashboard = () => {\n  return (\n    <div className=\"dashboard\">\n      \n      <div id=\"pdf-content\">\n      <h1>Analysis Report</h1>\n        <ScoreDistribution />\n        <PassFailRate />\n        <TopicwiseTopPerformers />\n      </div>\n      <div className=\"button-container\">\n        <Link to=\"/scoreboard\"><button>Back</button></Link>\n        <button onClick={generatePdf}>Download PDF</button>\n        <Link to=\"/\"><button>Logout</button></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}