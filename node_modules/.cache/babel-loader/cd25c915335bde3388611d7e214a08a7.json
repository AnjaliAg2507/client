{"ast":null,"code":"import _toConsumableArray from \"/Users/anjaliagrawal/Desktop/ons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anjaliagrawal/Desktop/ons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js\";\n/*import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport './Quiz.css';\n\nimport Score from './Score';\nimport {quizData} from './quizData';\n\n\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n \n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz}/>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\n\n*/\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport \"./Quiz.css\";\nimport Score from \"./Score\";\nimport { quizData } from \"./quizData\";\nvar Quiz = function Quiz() {\n  var _useState = useState(_.shuffle(quizData)),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showScore = _useState6[0],\n    setShowScore = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    score = _useState8[0],\n    setScore = _useState8[1];\n  var _useState9 = useState(Array(questions.length).fill(null)),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userAnswers = _useState10[0],\n    setUserAnswers = _useState10[1];\n  useEffect(function () {\n    // update the score based on the latest selection\n    var latestAnswer = userAnswers[currentQuestion];\n    var question = questions[currentQuestion];\n    if (latestAnswer !== null && latestAnswer === question.answer) {\n      setScore(score + 1);\n    } else if (latestAnswer !== null && latestAnswer !== question.answer) {\n      setScore(score - 1);\n    }\n  }, [userAnswers, currentQuestion]);\n  var handleAnswerOptionClick = function handleAnswerOptionClick(answerIndex) {\n    var updatedAnswers = _toConsumableArray(userAnswers);\n    updatedAnswers[currentQuestion] = answerIndex;\n    setUserAnswers(updatedAnswers);\n  };\n  var handlePrevClick = function handlePrevClick() {\n    setCurrentQuestion(currentQuestion - 1);\n  };\n  var handleNextClick = function handleNextClick() {\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  var handleFinishClick = function handleFinishClick() {\n    setShowScore(true);\n  };\n  var restartQuiz = function restartQuiz() {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setUserAnswers(Array(questions.length).fill(null));\n  };\n  var isPrevDisabled = currentQuestion === 0;\n  var isNextDisabled = currentQuestion === questions.length - 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(Score, {\n    score: score,\n    totalQuestions: questions.length,\n    restartQuiz: restartQuiz,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, questions[currentQuestion].options.map(function (option, index) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"answer-option \".concat(userAnswers[currentQuestion] === index ? \"selected\" : \"\"),\n      onClick: function onClick() {\n        return handleAnswerOptionClick(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, option);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: isPrevDisabled,\n    onClick: handlePrevClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Prev\"), isNextDisabled ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFinishClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Finish\") : /*#__PURE__*/React.createElement(\"button\", {\n    disabled: userAnswers[currentQuestion] === null,\n    onClick: handleNextClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Next\"))));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useState","useEffect","_","Link","Score","quizData","Quiz","_useState","shuffle","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","score","setScore","_useState9","Array","length","fill","_useState10","userAnswers","setUserAnswers","latestAnswer","question","answer","handleAnswerOptionClick","answerIndex","updatedAnswers","_toConsumableArray","handlePrevClick","handleNextClick","handleFinishClick","restartQuiz","isPrevDisabled","isNextDisabled","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","totalQuestions","Fragment","options","map","option","index","key","concat","onClick","disabled"],"sources":["/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js"],"sourcesContent":["\n/*import React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport './Quiz.css';\n\nimport Score from './Score';\nimport {quizData} from './quizData';\n\n\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n \n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz}/>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\n\n*/\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport \"./Quiz.css\";\n\nimport Score from \"./Score\";\nimport { quizData } from \"./quizData\";\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(\n    Array(questions.length).fill(null)\n  );\n\n  useEffect(() => {\n    // update the score based on the latest selection\n    const latestAnswer = userAnswers[currentQuestion];\n    const question = questions[currentQuestion];\n\n    if (latestAnswer !== null && latestAnswer === question.answer) {\n      setScore(score + 1);\n    } else if (latestAnswer !== null && latestAnswer !== question.answer) {\n      setScore(score - 1);\n    }\n  }, [userAnswers, currentQuestion]);\n\n  const handleAnswerOptionClick = (answerIndex) => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[currentQuestion] = answerIndex;\n    setUserAnswers(updatedAnswers);\n  };\n\n  const handlePrevClick = () => {\n    setCurrentQuestion(currentQuestion - 1);\n  };\n\n  const handleNextClick = () => {\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const handleFinishClick = () => {\n    setShowScore(true);\n  };\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setUserAnswers(Array(questions.length).fill(null));\n  };\n\n  const isPrevDisabled = currentQuestion === 0;\n  const isNextDisabled = currentQuestion === questions.length - 1;\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz} />\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQuestion].options.map((option, index) => (\n              <button\n                key={index}\n                className={`answer-option ${\n                  userAnswers[currentQuestion] === index ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleAnswerOptionClick(index)}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n          <div className=\"button-section\">\n            <button disabled={isPrevDisabled} onClick={handlePrevClick}>\n              Prev\n            </button>\n            {isNextDisabled ? (\n              <button onClick={handleFinishClick}>Finish</button>\n            ) : (\n              <button disabled={userAnswers[currentQuestion] === null} onClick={handleNextClick}>\n                Next\n              </button>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AAEnB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,YAAY;AAErC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACiBP,QAAQ,CAACE,CAAC,CAACM,OAAO,CAACH,QAAQ,CAAC,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAxDI,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACgBb,QAAQ,CAAC,CAAC,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACRjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACJrB,QAAQ,CAAC,CAAC,CAAC;IAAAsB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA9BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACgBzB,QAAQ,CAC5C0B,KAAK,CAACf,SAAS,CAACgB,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CACnC;IAAAC,WAAA,GAAAnB,cAAA,CAAAe,UAAA;IAFMK,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAIlC5B,SAAS,CAAC,YAAM;IACd;IACA,IAAM+B,YAAY,GAAGF,WAAW,CAACf,eAAe,CAAC;IACjD,IAAMkB,QAAQ,GAAGtB,SAAS,CAACI,eAAe,CAAC;IAE3C,IAAIiB,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAKC,QAAQ,CAACC,MAAM,EAAE;MAC7DV,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB,CAAC,MAAM,IAAIS,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAKC,QAAQ,CAACC,MAAM,EAAE;MACpEV,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACO,WAAW,EAAEf,eAAe,CAAC,CAAC;EAElC,IAAMoB,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,WAAW,EAAK;IAC/C,IAAMC,cAAc,GAAAC,kBAAA,CAAOR,WAAW,CAAC;IACvCO,cAAc,CAACtB,eAAe,CAAC,GAAGqB,WAAW;IAC7CL,cAAc,CAACM,cAAc,CAAC;EAChC,CAAC;EAED,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BvB,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,IAAMyB,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BxB,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,IAAM0B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9BrB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMsB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB9B,YAAY,CAACV,CAAC,CAACM,OAAO,CAACH,QAAQ,CAAC,CAAC;IACjCW,kBAAkB,CAAC,CAAC,CAAC;IACrBI,YAAY,CAAC,KAAK,CAAC;IACnBI,QAAQ,CAAC,CAAC,CAAC;IACXO,cAAc,CAACL,KAAK,CAACf,SAAS,CAACgB,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACpD,CAAC;EAED,IAAMe,cAAc,GAAG5B,eAAe,KAAK,CAAC;EAC5C,IAAM6B,cAAc,GAAG7B,eAAe,KAAKJ,SAAS,CAACgB,MAAM,GAAG,CAAC;EAE/D,oBACE5B,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClBlC,SAAS,gBACRpB,KAAA,CAAA8C,aAAA,CAACzC,KAAK;IAACmB,KAAK,EAAEA,KAAM;IAAC+B,cAAc,EAAE3C,SAAS,CAACgB,MAAO;IAACe,WAAW,EAAEA,WAAY;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,gBAEnFtD,KAAA,CAAA8C,aAAA,CAAA9C,KAAA,CAAAwD,QAAA,qBACExD,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BtD,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BtD,KAAA,CAAA8C,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,WAAS,EAACtC,eAAe,GAAG,CAAC,CAAQ,KAAC,EAACJ,SAAS,CAACgB,MAAM,CACzD,eACN5B,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE1C,SAAS,CAACI,eAAe,CAAC,CAACkB,QAAQ,CAAO,CACtE,eACNlC,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5B1C,SAAS,CAACI,eAAe,CAAC,CAACyC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;IAAA,oBACpD5D,KAAA,CAAA8C,aAAA;MACEe,GAAG,EAAED,KAAM;MACXb,SAAS,mBAAAe,MAAA,CACP/B,WAAW,CAACf,eAAe,CAAC,KAAK4C,KAAK,GAAG,UAAU,GAAG,EAAE,CACvD;MACHG,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM3B,uBAAuB,CAACwB,KAAK,CAAC;MAAA,CAAC;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE7CK,MAAM,CACA;EAAA,CACV,CAAC,CACE,eACN3D,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BtD,KAAA,CAAA8C,aAAA;IAAQkB,QAAQ,EAAEpB,cAAe;IAACmB,OAAO,EAAEvB,eAAgB;IAAAQ,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAE5D,CAAS,EACRT,cAAc,gBACb7C,KAAA,CAAA8C,aAAA;IAAQiB,OAAO,EAAErB,iBAAkB;IAAAM,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,gBAEnDtD,KAAA,CAAA8C,aAAA;IAAQkB,QAAQ,EAAEjC,WAAW,CAACf,eAAe,CAAC,KAAK,IAAK;IAAC+C,OAAO,EAAEtB,eAAgB;IAAAO,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAEnF,CACD,CACG,CAET,CACG;AAEV,CAAC;AAED,eAAe/C,IAAI"},"metadata":{},"sourceType":"module"}