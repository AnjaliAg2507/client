{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/ons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js\";\n/*import React, { useState } from 'react';\nimport _ from 'lodash';\n\nimport './Quiz.css';\n\nimport {quizData} from './quizData';\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    \n    <div className=\"quiz\">\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  \n  );\n};\n\nexport default Quiz;\n\n*/\n\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { quizData } from \"./quizData\";\nimport './Quiz.css';\nvar Quiz = function Quiz(_ref) {\n  var onScoreUpdate = _ref.onScoreUpdate;\n  var _useState = useState(_.shuffle(quizData)),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var handleAnswerOptionClick = function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) {\n      onScoreUpdate(1);\n    }\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      onScoreUpdate(0);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, questions[currentQuestion].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, _.chunk(_.shuffle(questions[currentQuestion].options), 2).map(function (optionChunk) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, optionChunk.map(function (option) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return handleAnswerOptionClick(option === questions[currentQuestion].answer);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, option);\n    }));\n  })));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useState","_","quizData","Quiz","_ref","onScoreUpdate","_useState","shuffle","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","handleAnswerOptionClick","isCorrect","nextQuestion","length","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","question","chunk","options","map","optionChunk","option","onClick","answer"],"sources":["/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport _ from 'lodash';\n\nimport './Quiz.css';\n\nimport {quizData} from './quizData';\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    \n    <div className=\"quiz\">\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  \n  );\n};\n\nexport default Quiz;\n\n*/\n\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { quizData } from \"./quizData\";\nimport './Quiz.css';\n\nconst Quiz = ({ onScoreUpdate }) => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      onScoreUpdate(1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      onScoreUpdate(0);\n    }\n  };\n\n  return (\n    <div className=\"quiz\">\n      <div className=\"question-section\">\n        <div className=\"question-count\">\n          <span>Question {currentQuestion + 1}</span>/{questions.length}\n        </div>\n        <div className=\"question-text\">\n          {questions[currentQuestion].question}\n        </div>\n      </div>\n      <div className=\"answer-section\">\n        {_.chunk(\n          _.shuffle(questions[currentQuestion].options),\n          2\n        ).map((optionChunk) => (\n          <div className=\"answer-row\">\n            {optionChunk.map((option) => (\n              <button\n                onClick={() =>\n                  handleAnswerOptionClick(\n                    option === questions[currentQuestion].answer\n                  )\n                }\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}