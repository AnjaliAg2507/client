{"ast":null,"code":"import _toConsumableArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _readOnlyError from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\nimport _asyncToGenerator from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\n\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\nconst topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\",\n    // add more topics and colors here...\n  };\n  const calculateHistogramData = (scoresByTopic) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n    for (const topic in scoresByTopic) {\n      const binCounts = new Array(bins.length - 1).fill(0);\n      const scores = scoresByTopic[topic];\n      for (const score of scores) {\n        for (let i = 1; i < bins.length; i++) {\n          if (score >= bins[i-1] && score < bins[i]) {\n            binCounts[i-1]++;\n            break;\n          }\n        }\n      }\n      const topicHistogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count, topic }));\n      histogramData.push(...topicHistogramData);\n    }\n    return histogramData;\n  };\n\n  const getUniqueRollNumbers = (data) => {\n    return new Set(data.map(student => student.roll_no)).size;\n  };\n\n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Topic Wise Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.filter(bin => bin.topic\n            ).map(bin => bin.x)}\nstyle={{\naxis: { stroke: '#000' },\ntickLabels: { fontSize: 12, padding: 5 },\n}}\n/>\n{data.map((bin) => (\n<VictoryBar\nkey={bin.topic}\ndata={[bin]}\nx=\"x\"\ny=\"y\"\nstyle={{\ndata: { fill: topicColorMap[bin.topic] || \"#c43a31\" },\nlabels: { fontSize: 12, fontWeight: 'bold' },\n}}\nlabelComponent={<VictoryTooltip />}\nlabels={({ datum }) => `Topic: ${bin.topic}\\nScore: ${datum.y}`}\n\n/>\n))}\n</VictoryChart>\n</div>\n);\n};\nexport default ScoreDistribution;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scores = response.data;\n        setData(scores);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n\n    fetchTopics();\n  }, []);\n\n  const fetchTopics = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/result/topic');\n      console.log(response.data); // Check the response data\n      setTopics(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTopicSelect = (event) => {\n    setSelectedTopic(event.target.value);\n  }\n\n  let filteredData = data;\n  if (selectedTopic !== '') {\n    filteredData = data.filter(score => score.topic === selectedTopic);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"score-distribution-empty\">\n        <h1>SCORE DISTRIBUTION</h1>\n        <p>No scores available to display</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-distribution\">\n      <h1>SCORE DISTRIBUTION</h1>\n      <div className=\"topic-selector\">\n        <label htmlFor=\"topic\">Select a topic:</label>\n        <select id=\"topic\" value={selectedTopic} onChange={handleTopicSelect}>\n          <option value=\"\">All Topics</option>\n          {topics.map((topic) => (\n            <option key={topic} value={topic}>{topic}</option>\n          ))}\n        </select>\n      </div>\n      <VictoryChart domainPadding={20}>\n        <VictoryAxis\n          tickValues={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n          tickFormat={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]}\n          label=\"Score\"\n          style={{\n            axisLabel: { padding: 30 }\n          }}\n        />\n        <VictoryAxis dependentAxis label=\"Number of Students\"\n          style={{\n            axisLabel: { padding: 35 }\n          }}\n        />\n        <VictoryBar\n          data={filteredData}\n          x=\"point\"\n          y=\"count\"\n          labelComponent={<VictoryTooltip />}\n          style={{\n            data: { fill: \"#69c8f2\" }\n          }}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default ScoreDistribution;\n\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\nvar ScoreDistribution = function ScoreDistribution() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    topics = _useState6[0],\n    setTopics = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTopic = _useState8[0],\n    setSelectedTopic = _useState8[1];\n  useEffect(function () {\n    axios.get('http://localhost:8000/api/result').then(function (response) {\n      var scoresByTopic = groupScoresByTopic(response.data);\n      var histogramData = calculateHistogramData(scoresByTopic);\n      setData(histogramData);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoading(false);\n    });\n    fetchTopics();\n  }, []);\n  var groupScoresByTopic = function groupScoresByTopic(data) {\n    var scoresByTopic = {};\n    var _iterator = _createForOfIteratorHelper(data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var student = _step.value;\n        var topic = student.topic,\n          point = student.point;\n        if (!scoresByTopic[topic]) {\n          scoresByTopic[topic] = [];\n        }\n        scoresByTopic[topic].push(point);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return scoresByTopic;\n  };\n  var fetchTopics = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('http://localhost:8000/api/result/topic');\n          case 3:\n            response = _context.sent;\n            console.log(response.data); // Check the response data\n            setTopics(response.data);\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return function fetchTopics() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleTopicSelect = function handleTopicSelect(event) {\n    setSelectedTopic(event.target.value);\n  };\n  var calculateHistogramData = function calculateHistogramData(scoresByTopic) {\n    var bins = [0, 5, 10, 15, 20, 25];\n    var histogramData = [];\n    var _loop = function _loop(topic) {\n      if (selectedTopic !== \"\" && topic !== selectedTopic) {\n        return \"continue\";\n      }\n      var binCounts = new Array(bins.length - 1).fill(0);\n      var scores = scoresByTopic[topic];\n\n      // Filter scores by selected topic\n      if (selectedTopic !== \"\") {\n        scores.filter(function (score) {\n          return score.topic === selectedTopic;\n        }), _readOnlyError(\"scores\");\n      }\n      var _iterator2 = _createForOfIteratorHelper(scores),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var score = _step2.value;\n          for (var i = 1; i < bins.length; i++) {\n            if (score >= bins[i - 1] && score < bins[i]) {\n              binCounts[i - 1]++;\n              break;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var topicHistogramData = binCounts.map(function (count, i) {\n        return {\n          x: \"\".concat(bins[i], \"-\").concat(bins[i + 1]),\n          y: count,\n          topic: topic\n        };\n      });\n      histogramData.push.apply(histogramData, _toConsumableArray(topicHistogramData));\n    };\n    for (var topic in scoresByTopic) {\n      var _ret = _loop(topic);\n      if (_ret === \"continue\") continue;\n    }\n    return histogramData;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n  if (data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-distribution-empty\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, \"SCORE DISTRIBUTION\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }\n    }, \"No scores available to display\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-distribution\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 5\n    }\n  }, \"SCORE DISTRIBUTION\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topic-selector\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"topic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, \"Select a topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"topic\",\n    value: selectedTopic,\n    onChange: handleTopicSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, \"All Topics\"), topics.map(function (topic) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: topic,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, topic);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 20,\n    animate: {\n      duration: 500,\n      easing: \"bounce\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VictoryAxis, {\n    label: \"Score Range\",\n    tickFormat: function tickFormat(x) {\n      return \"\".concat(x);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    label: \"Number of Students\",\n    tickFormat: function tickFormat(y) {\n      return \"\".concat(y);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    data: data,\n    x: \"x\",\n    y: \"y\",\n    labels: function labels(_ref2) {\n      var datum = _ref2.datum;\n      return \"\".concat(datum.topic, \": \").concat(datum.y);\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 27\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default ScoreDistribution;","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","React","useState","useEffect","VictoryChart","VictoryBar","VictoryAxis","VictoryTooltip","axios","ScoreDistribution","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","data","setData","_useState5","_useState6","topics","setTopics","_useState7","_useState8","selectedTopic","setSelectedTopic","get","response","scoresByTopic","groupScoresByTopic","histogramData","calculateHistogramData","console","log","fetchTopics","_iterator","_step","student","topic","point","_ref","_asyncToGenerator","_callee","_callee$","_context","t0","apply","arguments","handleTopicSelect","event","target","bins","_loop","binCounts","fill","scores","filter","score","_readOnlyError","_iterator2","_step2","topicHistogramData","map","count","x","concat","y","_toConsumableArray","_ret","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","domainPadding","animate","duration","easing","label","tickFormat","dependentAxis","labels","_ref2","datum","labelComponent"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js"],"sourcesContent":["\n/*\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\n\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\nconst topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\",\n    // add more topics and colors here...\n  };\n  const calculateHistogramData = (scoresByTopic) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n    for (const topic in scoresByTopic) {\n      const binCounts = new Array(bins.length - 1).fill(0);\n      const scores = scoresByTopic[topic];\n      for (const score of scores) {\n        for (let i = 1; i < bins.length; i++) {\n          if (score >= bins[i-1] && score < bins[i]) {\n            binCounts[i-1]++;\n            break;\n          }\n        }\n      }\n      const topicHistogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count, topic }));\n      histogramData.push(...topicHistogramData);\n    }\n    return histogramData;\n  };\n\n  const getUniqueRollNumbers = (data) => {\n    return new Set(data.map(student => student.roll_no)).size;\n  };\n\n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Topic Wise Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.filter(bin => bin.topic\n            ).map(bin => bin.x)}\nstyle={{\naxis: { stroke: '#000' },\ntickLabels: { fontSize: 12, padding: 5 },\n}}\n/>\n{data.map((bin) => (\n<VictoryBar\nkey={bin.topic}\ndata={[bin]}\nx=\"x\"\ny=\"y\"\nstyle={{\ndata: { fill: topicColorMap[bin.topic] || \"#c43a31\" },\nlabels: { fontSize: 12, fontWeight: 'bold' },\n}}\nlabelComponent={<VictoryTooltip />}\nlabels={({ datum }) => `Topic: ${bin.topic}\\nScore: ${datum.y}`}\n\n/>\n))}\n</VictoryChart>\n</div>\n);\n};\nexport default ScoreDistribution;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scores = response.data;\n        setData(scores);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n\n    fetchTopics();\n  }, []);\n\n  const fetchTopics = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/result/topic');\n      console.log(response.data); // Check the response data\n      setTopics(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTopicSelect = (event) => {\n    setSelectedTopic(event.target.value);\n  }\n\n  let filteredData = data;\n  if (selectedTopic !== '') {\n    filteredData = data.filter(score => score.topic === selectedTopic);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"score-distribution-empty\">\n        <h1>SCORE DISTRIBUTION</h1>\n        <p>No scores available to display</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-distribution\">\n      <h1>SCORE DISTRIBUTION</h1>\n      <div className=\"topic-selector\">\n        <label htmlFor=\"topic\">Select a topic:</label>\n        <select id=\"topic\" value={selectedTopic} onChange={handleTopicSelect}>\n          <option value=\"\">All Topics</option>\n          {topics.map((topic) => (\n            <option key={topic} value={topic}>{topic}</option>\n          ))}\n        </select>\n      </div>\n      <VictoryChart domainPadding={20}>\n        <VictoryAxis\n          tickValues={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n          tickFormat={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]}\n          label=\"Score\"\n          style={{\n            axisLabel: { padding: 30 }\n          }}\n        />\n        <VictoryAxis dependentAxis label=\"Number of Students\"\n          style={{\n            axisLabel: { padding: 35 }\n          }}\n        />\n        <VictoryBar\n          data={filteredData}\n          x=\"point\"\n          y=\"count\"\n          labelComponent={<VictoryTooltip />}\n          style={{\n            data: { fill: \"#69c8f2\" }\n          }}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default ScoreDistribution;\n\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n\n    fetchTopics();\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\n  const fetchTopics = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/result/topic');\n      console.log(response.data); // Check the response data\n      setTopics(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTopicSelect = (event) => {\n    setSelectedTopic(event.target.value);\n  }\n\n const calculateHistogramData = (scoresByTopic) => {\n  const bins = [0, 5, 10, 15, 20, 25];\n  const histogramData = [];\n\n  for (const topic in scoresByTopic) {\n    if (selectedTopic !== \"\" && topic !== selectedTopic) {\n      continue;\n    }\n\n    const binCounts = new Array(bins.length - 1).fill(0);\n    const scores = scoresByTopic[topic];\n\n    // Filter scores by selected topic\n    if (selectedTopic !== \"\") {\n      scores = scores.filter((score) => score.topic === selectedTopic);\n    }\n\n    for (const score of scores) {\n      for (let i = 1; i < bins.length; i++) {\n        if (score >= bins[i - 1] && score < bins[i]) {\n          binCounts[i - 1]++;\n          break;\n        }\n      }\n    }\n\n    const topicHistogramData = binCounts.map((count, i) => ({\n      x: `${bins[i]}-${bins[i + 1]}`,\n      y: count,\n      topic,\n    }));\n    histogramData.push(...topicHistogramData);\n  }\n\n  return histogramData;\n};\n\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className=\"score-distribution-empty\">\n        <h1>SCORE DISTRIBUTION</h1>\n        <p>No scores available to display</p>\n      </div>\n    );\n  }\n\nreturn (\n  <div className=\"score-distribution\">\n    <h1>SCORE DISTRIBUTION</h1>\n    <div className=\"topic-selector\">\n      <label htmlFor=\"topic\">Select a topic:</label>\n      <select id=\"topic\" value={selectedTopic} onChange={handleTopicSelect}>\n        <option value=\"\">All Topics</option>\n        {topics.map((topic) => (\n          <option key={topic}>{topic}</option>\n        ))}\n      </select>\n    </div>\n    <div className=\"chart-container\">\n      <VictoryChart\n        domainPadding={20}\n        animate={{ duration: 500, easing: \"bounce\" }}\n      >\n        <VictoryAxis\n          label=\"Score Range\"\n          tickFormat={(x) => `${x}`}\n        />\n        <VictoryAxis\n          dependentAxis\n          label=\"Number of Students\"\n          tickFormat={(y) => `${y}`}\n        />\n        <VictoryBar\n          data={data}\n          x=\"x\"\n          y=\"y\"\n          labels={({ datum }) => `${datum.topic}: ${datum.y}`}\n          labelComponent={<VictoryTooltip />}\n        />\n      </VictoryChart>\n    </div>\n  </div>\n);\n\n};\n\nexport default ScoreDistribution;\n\n\n\n\n\n\n         \n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}