{"ast":null,"code":"import _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { VictoryContainer, Selection, Rect } from \"victory-core\";\nimport { BrushHelpers } from \"./brush-helpers\";\nimport isEqual from \"react-fast-compare\";\nexport var brushContainerMixin = function brushContainerMixin(base) {\n  var _class;\n  return _class = /*#__PURE__*/function (_base) {\n    _inherits(VictoryBrushContainer, _base);\n    var _super = _createSuper(VictoryBrushContainer);\n    function VictoryBrushContainer() {\n      _classCallCheck(this, VictoryBrushContainer);\n      return _super.apply(this, arguments);\n    }\n    _createClass(VictoryBrushContainer, [{\n      key: \"getSelectBox\",\n      value: function getSelectBox(props, coordinates) {\n        var x = coordinates.x,\n          y = coordinates.y;\n        var brushStyle = props.brushStyle,\n          brushComponent = props.brushComponent,\n          name = props.name;\n        var brushComponentStyle = brushComponent.props && brushComponent.props.style;\n        var cursor = !props.allowDrag && !props.allowResize ? \"auto\" : \"move\";\n        return x[0] !== x[1] && y[0] !== y[1] ? /*#__PURE__*/React.cloneElement(brushComponent, {\n          key: \"\".concat(name, \"-brush\"),\n          width: Math.abs(x[1] - x[0]) || 1,\n          height: Math.abs(y[1] - y[0]) || 1,\n          x: Math.min(x[0], x[1]),\n          y: Math.min(y[0], y[1]),\n          cursor: cursor,\n          style: _defaults({}, brushComponentStyle, brushStyle)\n        }) : null;\n      }\n    }, {\n      key: \"getCursorPointers\",\n      value: function getCursorPointers(props) {\n        var cursors = {\n          yProps: \"ns-resize\",\n          xProps: \"ew-resize\"\n        };\n        if (!props.allowResize && props.allowDrag) {\n          cursors.xProps = \"move\";\n          cursors.yProps = \"move\";\n        } else if (!props.allowResize && !props.allowDrag) {\n          cursors.xProps = \"auto\";\n          cursors.yProps = \"auto\";\n        }\n        return cursors;\n      }\n    }, {\n      key: \"getHandles\",\n      value: function getHandles(props, domain) {\n        var handleWidth = props.handleWidth,\n          handleStyle = props.handleStyle,\n          handleComponent = props.handleComponent,\n          name = props.name;\n        var domainBox = BrushHelpers.getDomainBox(props, domain);\n        var x1 = domainBox.x1,\n          x2 = domainBox.x2,\n          y1 = domainBox.y1,\n          y2 = domainBox.y2;\n        var _BrushHelpers$getHand = BrushHelpers.getHandles(props, domainBox),\n          top = _BrushHelpers$getHand.top,\n          bottom = _BrushHelpers$getHand.bottom,\n          left = _BrushHelpers$getHand.left,\n          right = _BrushHelpers$getHand.right;\n        var width = Math.abs(x2 - x1) || 1;\n        var height = Math.abs(y2 - y1) || 1;\n        var handleComponentStyle = handleComponent.props && handleComponent.props.style || {};\n        var style = _defaults({}, handleComponentStyle, handleStyle);\n        var cursors = this.getCursorPointers(props);\n        var yProps = {\n          style: style,\n          width: width,\n          height: handleWidth,\n          cursor: cursors.yProps\n        };\n        var xProps = {\n          style: style,\n          width: handleWidth,\n          height: height,\n          cursor: cursors.xProps\n        };\n        var handleProps = {\n          top: top && _assign({\n            x: top.x1,\n            y: top.y1\n          }, yProps),\n          bottom: bottom && _assign({\n            x: bottom.x1,\n            y: bottom.y1\n          }, yProps),\n          left: left && _assign({\n            y: left.y1,\n            x: left.x1\n          }, xProps),\n          right: right && _assign({\n            y: right.y1,\n            x: right.x1\n          }, xProps)\n        };\n        var handles = [\"top\", \"bottom\", \"left\", \"right\"].reduce(function (memo, curr) {\n          memo = handleProps[curr] ? memo.concat( /*#__PURE__*/React.cloneElement(handleComponent, _assign({\n            key: \"\".concat(name, \"-handle-\").concat(curr)\n          }, handleProps[curr]))) : memo;\n          return memo;\n        }, []);\n        return handles.length ? handles : null;\n      }\n    }, {\n      key: \"getRect\",\n      value: function getRect(props) {\n        var currentDomain = props.currentDomain,\n          cachedBrushDomain = props.cachedBrushDomain;\n        var brushDomain = _defaults({}, props.brushDomain, props.domain);\n        var domain = isEqual(brushDomain, cachedBrushDomain) ? _defaults({}, currentDomain, brushDomain) : brushDomain;\n        var coordinates = Selection.getDomainCoordinates(props, domain);\n        var selectBox = this.getSelectBox(props, coordinates);\n        return selectBox ? [selectBox, this.getHandles(props, domain)] : [];\n      } // Overrides method in VictoryContainer\n    }, {\n      key: \"getChildren\",\n      value: function getChildren(props) {\n        return [].concat(_toConsumableArray(React.Children.toArray(props.children)), _toConsumableArray(this.getRect(props)));\n      }\n    }]);\n    return VictoryBrushContainer;\n  }(base), _class.displayName = \"VictoryBrushContainer\", _class.propTypes = _objectSpread(_objectSpread({}, VictoryContainer.propTypes), {}, {\n    allowDrag: PropTypes.bool,\n    allowDraw: PropTypes.bool,\n    allowResize: PropTypes.bool,\n    brushComponent: PropTypes.element,\n    brushDimension: PropTypes.oneOf([\"x\", \"y\"]),\n    brushDomain: PropTypes.shape({\n      x: PropTypes.array,\n      y: PropTypes.array\n    }),\n    brushStyle: PropTypes.object,\n    defaultBrushArea: PropTypes.oneOf([\"all\", \"disable\", \"none\", \"move\"]),\n    disable: PropTypes.bool,\n    handleComponent: PropTypes.element,\n    handleStyle: PropTypes.object,\n    handleWidth: PropTypes.number,\n    onBrushCleared: PropTypes.func,\n    onBrushDomainChange: PropTypes.func,\n    onBrushDomainChangeEnd: PropTypes.func\n  }), _class.defaultProps = _objectSpread(_objectSpread({}, VictoryContainer.defaultProps), {}, {\n    allowDrag: true,\n    allowDraw: true,\n    allowResize: true,\n    brushComponent: /*#__PURE__*/React.createElement(Rect, null),\n    brushStyle: {\n      stroke: \"transparent\",\n      fill: \"black\",\n      fillOpacity: 0.1\n    },\n    handleComponent: /*#__PURE__*/React.createElement(Rect, null),\n    handleStyle: {\n      stroke: \"transparent\",\n      fill: \"transparent\"\n    },\n    handleWidth: 8,\n    mouseMoveThreshold: 0\n  }), _class.defaultEvents = function (props) {\n    return [{\n      target: \"parent\",\n      eventHandlers: {\n        onMouseDown: function onMouseDown(evt, targetProps) {\n          return props.disable ? {} : BrushHelpers.onMouseDown(evt, targetProps);\n        },\n        onTouchStart: function onTouchStart(evt, targetProps) {\n          return props.disable ? {} : BrushHelpers.onMouseDown(evt, targetProps);\n        },\n        onGlobalMouseMove: function onGlobalMouseMove(evt, targetProps) {\n          return props.disable || !targetProps.isPanning && !targetProps.isSelecting ? {} : BrushHelpers.onGlobalMouseMove(evt, targetProps);\n        },\n        onGlobalTouchMove: function onGlobalTouchMove(evt, targetProps) {\n          return props.disable || !targetProps.isPanning && !targetProps.isSelecting ? {} : BrushHelpers.onGlobalMouseMove(evt, targetProps);\n        },\n        onGlobalMouseUp: function onGlobalMouseUp(evt, targetProps) {\n          return props.disable ? {} : BrushHelpers.onGlobalMouseUp(evt, targetProps);\n        },\n        onGlobalTouchEnd: function onGlobalTouchEnd(evt, targetProps) {\n          return props.disable ? {} : BrushHelpers.onGlobalMouseUp(evt, targetProps);\n        },\n        onGlobalTouchCancel: function onGlobalTouchCancel(evt, targetProps) {\n          return props.disable ? {} : BrushHelpers.onGlobalMouseUp(evt, targetProps);\n        }\n      }\n    }];\n  }, _class;\n};\nexport var VictoryBrushContainer = brushContainerMixin(VictoryContainer);","map":null,"metadata":{},"sourceType":"module"}