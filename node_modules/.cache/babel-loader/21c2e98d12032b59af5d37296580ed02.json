{"ast":null,"code":"import _assign from \"lodash/assign\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Helpers from \"../victory-util/helpers\";\nimport { CommonProps } from \"../victory-util/common-props\";\nimport { Line } from \"./line\";\nvar evaluateProps = function evaluateProps(props) {\n  /**\n   * Potential evaluated props are:\n   * `ariaLabel`\n   * `desc`\n   * `id`\n   * `style`\n   * `tabIndex`\n   */\n  var ariaLabel = Helpers.evaluateProp(props.ariaLabel, props);\n  var desc = Helpers.evaluateProp(props.desc, props);\n  var id = Helpers.evaluateProp(props.id, props);\n  var style = Helpers.evaluateStyle(props.style, props);\n  var tabIndex = Helpers.evaluateProp(props.tabIndex, props);\n  return _assign({}, props, {\n    ariaLabel: ariaLabel,\n    desc: desc,\n    id: id,\n    style: style,\n    tabIndex: tabIndex\n  });\n};\nexport var Whisker = function Whisker(props) {\n  props = evaluateProps(props);\n  var _props = props,\n    ariaLabel = _props.ariaLabel,\n    groupComponent = _props.groupComponent,\n    lineComponent = _props.lineComponent,\n    events = _props.events,\n    className = _props.className,\n    majorWhisker = _props.majorWhisker,\n    minorWhisker = _props.minorWhisker,\n    transform = _props.transform,\n    clipPath = _props.clipPath,\n    role = _props.role,\n    shapeRendering = _props.shapeRendering,\n    style = _props.style,\n    desc = _props.desc,\n    tabIndex = _props.tabIndex;\n  var baseProps = _objectSpread(_objectSpread({}, events), {}, {\n    style: style,\n    desc: desc,\n    tabIndex: tabIndex,\n    className: className,\n    transform: transform,\n    clipPath: clipPath,\n    role: role,\n    shapeRendering: shapeRendering\n  });\n  return /*#__PURE__*/React.cloneElement(groupComponent, {}, [/*#__PURE__*/React.cloneElement(lineComponent, _assign({\n    key: \"major-whisker\",\n    \"aria-label\": ariaLabel\n  }, baseProps, majorWhisker)), /*#__PURE__*/React.cloneElement(lineComponent, _assign({\n    key: \"minor-whisker\",\n    \"aria-label\": ariaLabel\n  }, baseProps, minorWhisker))]);\n};\nWhisker.propTypes = _objectSpread(_objectSpread({}, CommonProps.primitiveProps), {}, {\n  groupComponent: PropTypes.element,\n  lineComponent: PropTypes.element,\n  majorWhisker: PropTypes.shape({\n    x1: PropTypes.number,\n    x2: PropTypes.number,\n    y1: PropTypes.number,\n    y2: PropTypes.number\n  }),\n  minorWhisker: PropTypes.shape({\n    x1: PropTypes.number,\n    x2: PropTypes.number,\n    y1: PropTypes.number,\n    y2: PropTypes.number\n  })\n});\nWhisker.defaultProps = {\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  lineComponent: /*#__PURE__*/React.createElement(Line, null),\n  role: \"presentation\",\n  shapeRendering: \"auto\"\n};","map":null,"metadata":{},"sourceType":"module"}