{"ast":null,"code":"import _isFunction from \"lodash/isFunction\";\nimport _defaults from \"lodash/defaults\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ZoomHelpers from \"./zoom-helpers\";\nimport { VictoryContainer, VictoryClipContainer, Data, PropTypes as CustomPropTypes } from \"victory-core\";\nvar DEFAULT_DOWNSAMPLE = 150;\nexport var zoomContainerMixin = function zoomContainerMixin(base) {\n  var _class;\n  return _class = /*#__PURE__*/function (_base) {\n    _inherits(VictoryZoomContainer, _base);\n    var _super = _createSuper(VictoryZoomContainer);\n    function VictoryZoomContainer() {\n      _classCallCheck(this, VictoryZoomContainer);\n      return _super.apply(this, arguments);\n    }\n    _createClass(VictoryZoomContainer, [{\n      key: \"clipDataComponents\",\n      value: function clipDataComponents(children, props) {\n        var scale = props.scale,\n          clipContainerComponent = props.clipContainerComponent,\n          polar = props.polar,\n          origin = props.origin,\n          horizontal = props.horizontal;\n        var rangeX = horizontal ? scale.y.range() : scale.x.range();\n        var rangeY = horizontal ? scale.x.range() : scale.y.range();\n        var plottableWidth = Math.abs(rangeX[0] - rangeX[1]);\n        var plottableHeight = Math.abs(rangeY[0] - rangeY[1]);\n        var radius = Math.max.apply(Math, _toConsumableArray(rangeY));\n        var groupComponent = /*#__PURE__*/React.cloneElement(clipContainerComponent, _objectSpread({\n          clipWidth: plottableWidth,\n          clipHeight: plottableHeight,\n          translateX: Math.min.apply(Math, _toConsumableArray(rangeX)),\n          translateY: Math.min.apply(Math, _toConsumableArray(rangeY)),\n          polar: polar,\n          origin: polar ? origin : undefined,\n          radius: polar ? radius : undefined\n        }, clipContainerComponent.props));\n        return React.Children.toArray(children).map(function (child) {\n          if (!Data.isDataComponent(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            groupComponent: groupComponent\n          });\n        });\n      }\n    }, {\n      key: \"modifyPolarDomain\",\n      value: function modifyPolarDomain(domain, originalDomain) {\n        // Only zoom the radius of polar charts. Zooming angles is very confusing\n        return {\n          x: originalDomain.x,\n          y: [0, domain.y[1]]\n        };\n      }\n    }, {\n      key: \"downsampleZoomData\",\n      value: function downsampleZoomData(props, child, domain) {\n        var downsample = props.downsample;\n        var getData = function getData(childProps) {\n          var data = childProps.data,\n            x = childProps.x,\n            y = childProps.y;\n          var defaultGetData = child.type && _isFunction(child.type.getData) ? child.type.getData : function () {\n            return undefined;\n          }; // skip costly data formatting if x and y accessors are not present\n\n          return Array.isArray(data) && !x && !y ? data : defaultGetData(childProps);\n        };\n        var data = getData(child.props); // return undefined if downsample is not run, then default() will replace with child.props.data\n\n        if (!downsample || !domain || !data) {\n          return undefined;\n        }\n        var maxPoints = downsample === true ? DEFAULT_DOWNSAMPLE : downsample;\n        var dimension = props.zoomDimension || \"x\"; // important: assumes data is ordered by dimension\n        // get the start and end of the data that is in the current visible domain\n\n        var startIndex = data.findIndex(function (d) {\n          return d[dimension] >= domain[dimension][0];\n        });\n        var endIndex = data.findIndex(function (d) {\n          return d[dimension] > domain[dimension][1];\n        }); // pick one more point (if available) at each end so that VictoryLine, VictoryArea connect\n\n        if (startIndex !== 0) {\n          startIndex -= 1;\n        }\n        if (endIndex !== -1) {\n          endIndex += 1;\n        }\n        var visibleData = data.slice(startIndex, endIndex);\n        return Data.downsample(visibleData, maxPoints, startIndex);\n      }\n    }, {\n      key: \"modifyChildren\",\n      value: function modifyChildren(props) {\n        var _this = this;\n        var childComponents = React.Children.toArray(props.children); // eslint-disable-next-line max-statements\n\n        return childComponents.map(function (child) {\n          var role = child.type && child.type.role;\n          var isDataComponent = Data.isDataComponent(child);\n          var currentDomain = props.currentDomain,\n            zoomActive = props.zoomActive,\n            allowZoom = props.allowZoom;\n          var originalDomain = _defaults({}, props.originalDomain, props.domain);\n          var zoomDomain = _defaults({}, props.zoomDomain, props.domain);\n          var cachedZoomDomain = _defaults({}, props.cachedZoomDomain, props.domain);\n          var domain;\n          if (!ZoomHelpers.checkDomainEquality(zoomDomain, cachedZoomDomain)) {\n            // if zoomDomain has been changed, use it\n            domain = zoomDomain;\n          } else if (allowZoom && !zoomActive) {\n            // if user has zoomed all the way out, use the child domain\n            domain = child.props.domain;\n          } else {\n            // default: use currentDomain, set by the event handlers\n            domain = _defaults({}, currentDomain, originalDomain);\n          }\n          var newDomain = props.polar ? _this.modifyPolarDomain(domain, originalDomain) : domain;\n          if (newDomain && props.zoomDimension) {\n            // if zooming is restricted to a dimension, don't squash changes to zoomDomain in other dim\n            newDomain = _objectSpread(_objectSpread({}, zoomDomain), {}, _defineProperty({}, props.zoomDimension, newDomain[props.zoomDimension]));\n          } // don't downsample stacked data\n\n          var newProps = isDataComponent && role !== \"stack\" ? {\n            domain: newDomain,\n            data: _this.downsampleZoomData(props, child, newDomain)\n          } : {\n            domain: newDomain\n          };\n          return /*#__PURE__*/React.cloneElement(child, _defaults(newProps, child.props));\n        });\n      } // Overrides method in VictoryContainer\n    }, {\n      key: \"getChildren\",\n      value: function getChildren(props) {\n        var children = this.modifyChildren(props);\n        return this.clipDataComponents(children, props);\n      }\n    }]);\n    return VictoryZoomContainer;\n  }(base), _class.displayName = \"VictoryZoomContainer\", _class.propTypes = _objectSpread(_objectSpread({}, VictoryContainer.propTypes), {}, {\n    allowPan: PropTypes.bool,\n    allowZoom: PropTypes.bool,\n    clipContainerComponent: PropTypes.element.isRequired,\n    disable: PropTypes.bool,\n    downsample: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    minimumZoom: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n    onZoomDomainChange: PropTypes.func,\n    zoomDimension: PropTypes.oneOf([\"x\", \"y\"]),\n    zoomDomain: PropTypes.shape({\n      x: CustomPropTypes.domain,\n      y: CustomPropTypes.domain\n    })\n  }), _class.defaultProps = _objectSpread(_objectSpread({}, VictoryContainer.defaultProps), {}, {\n    clipContainerComponent: /*#__PURE__*/React.createElement(VictoryClipContainer, null),\n    allowPan: true,\n    allowZoom: true,\n    zoomActive: false\n  }), _class.defaultEvents = function (props) {\n    return [{\n      target: \"parent\",\n      eventHandlers: _objectSpread({\n        onMouseDown: function onMouseDown(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseDown(evt, targetProps);\n        },\n        onTouchStart: function onTouchStart(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseDown(evt, targetProps);\n        },\n        onMouseUp: function onMouseUp(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseUp(evt, targetProps);\n        },\n        onTouchEnd: function onTouchEnd(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseUp(evt, targetProps);\n        },\n        onMouseLeave: function onMouseLeave(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseLeave(evt, targetProps);\n        },\n        onTouchCancel: function onTouchCancel(evt, targetProps) {\n          return props.disable ? {} : ZoomHelpers.onMouseLeave(evt, targetProps);\n        },\n        // eslint-disable-next-line max-params\n        onMouseMove: function onMouseMove(evt, targetProps, eventKey, ctx) {\n          if (props.disable) {\n            return {};\n          }\n          return ZoomHelpers.onMouseMove(evt, targetProps, eventKey, ctx);\n        },\n        // eslint-disable-next-line max-params\n        onTouchMove: function onTouchMove(evt, targetProps, eventKey, ctx) {\n          if (props.disable) {\n            return {};\n          }\n          evt.preventDefault();\n          return ZoomHelpers.onMouseMove(evt, targetProps, eventKey, ctx);\n        }\n      }, props.disable || !props.allowZoom ? {} : {\n        onWheel: ZoomHelpers.onWheel\n      })\n    }];\n  }, _class;\n};\nexport default zoomContainerMixin(VictoryContainer); // @ts-expect-error IMPORTANT: when converting this file to TypeScript, you must export the type as well:\n// export const VictoryZoomContainer = zoomContainerMixin(VictoryContainer);\n// export type VictoryZoomContainer = typeof VictoryZoomContainer;","map":null,"metadata":{},"sourceType":"module"}