{"ast":null,"code":"import _includes from \"lodash/includes\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { Selection, Data, Helpers } from \"victory-core\";\nimport React from \"react\";\nvar SelectionHelpers = {\n  getDimension: function getDimension(props) {\n    var horizontal = props.horizontal,\n      selectionDimension = props.selectionDimension;\n    if (!horizontal || !selectionDimension) {\n      return selectionDimension;\n    }\n    return selectionDimension === \"x\" ? \"y\" : \"x\";\n  },\n  getDatasets: function getDatasets(props) {\n    if (props.data) {\n      return [{\n        data: props.data\n      }];\n    }\n    var getData = function getData(childProps) {\n      var data = Data.getData(childProps);\n      return Array.isArray(data) && data.length > 0 ? data : undefined;\n    };\n    var iteratee = function iteratee(child, childName, parent) {\n      var blacklist = props.selectionBlacklist || [];\n      if (!Data.isDataComponent(child) || _includes(blacklist, childName)) {\n        return null;\n      } else if (child.type && _isFunction(child.type.getData)) {\n        child = parent ? /*#__PURE__*/React.cloneElement(child, parent.props) : child;\n        var _childData = child.props && child.type.getData(child.props);\n        return _childData ? {\n          childName: childName,\n          data: _childData\n        } : null;\n      }\n      var childData = getData(child.props);\n      return childData ? {\n        childName: childName,\n        data: childData\n      } : null;\n    };\n    return Helpers.reduceChildren(React.Children.toArray(props.children), iteratee, props);\n  },\n  filterDatasets: function filterDatasets(props, datasets, bounds) {\n    var _this = this;\n    var filtered = datasets.reduce(function (memo, dataset) {\n      var selectedData = _this.getSelectedData(props, dataset.data, bounds);\n      memo = selectedData ? memo.concat({\n        childName: dataset.childName,\n        eventKey: selectedData.eventKey,\n        data: selectedData.data\n      }) : memo;\n      return memo;\n    }, []);\n    return filtered.length ? filtered : null;\n  },\n  getSelectedData: function getSelectedData(props, dataset) {\n    var x1 = props.x1,\n      y1 = props.y1,\n      x2 = props.x2,\n      y2 = props.y2;\n    var withinBounds = function withinBounds(d) {\n      var scaledPoint = Helpers.scalePoint(props, d);\n      return scaledPoint.x >= Math.min(x1, x2) && scaledPoint.x <= Math.max(x1, x2) && scaledPoint.y >= Math.min(y1, y2) && scaledPoint.y <= Math.max(y1, y2);\n    };\n    var eventKey = [];\n    var data = [];\n    var count = 0;\n    for (var index = 0, len = dataset.length; index < len; index++) {\n      var datum = dataset[index];\n      if (withinBounds(datum)) {\n        data[count] = datum;\n        eventKey[count] = datum.eventKey === undefined ? index : datum.eventKey;\n        count++;\n      }\n    }\n    return count > 0 ? {\n      eventKey: eventKey,\n      data: data\n    } : null;\n  },\n  // eslint-disable-next-line complexity, max-statements\n  onMouseDown: function onMouseDown(evt, targetProps) {\n    evt.preventDefault();\n    var activateSelectedData = targetProps.activateSelectedData,\n      allowSelection = targetProps.allowSelection,\n      polar = targetProps.polar,\n      selectedData = targetProps.selectedData;\n    if (!allowSelection) {\n      return {};\n    }\n    var dimension = this.getDimension(targetProps);\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var _Selection$getSVGEven = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven.x,\n      y = _Selection$getSVGEven.y;\n    var x1 = polar || dimension !== \"y\" ? x : Selection.getDomainCoordinates(targetProps).x[0];\n    var y1 = polar || dimension !== \"x\" ? y : Selection.getDomainCoordinates(targetProps).y[0];\n    var x2 = polar || dimension !== \"y\" ? x : Selection.getDomainCoordinates(targetProps).x[1];\n    var y2 = polar || dimension !== \"x\" ? y : Selection.getDomainCoordinates(targetProps).y[1];\n    var mutatedProps = {\n      x1: x1,\n      y1: y1,\n      select: true,\n      x2: x2,\n      y2: y2,\n      parentSVG: parentSVG\n    };\n    if (selectedData && _isFunction(targetProps.onSelectionCleared)) {\n      targetProps.onSelectionCleared(_defaults({}, mutatedProps, targetProps));\n    }\n    var parentMutation = [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return mutatedProps;\n      }\n    }];\n    var dataMutation = selectedData && activateSelectedData ? selectedData.map(function (d) {\n      return {\n        childName: d.childName,\n        eventKey: d.eventKey,\n        target: \"data\",\n        mutation: function mutation() {\n          return null;\n        }\n      };\n    }) : [];\n    return parentMutation.concat.apply(parentMutation, _toConsumableArray(dataMutation));\n  },\n  onMouseMove: function onMouseMove(evt, targetProps) {\n    var allowSelection = targetProps.allowSelection,\n      select = targetProps.select,\n      polar = targetProps.polar;\n    var dimension = this.getDimension(targetProps);\n    if (!allowSelection || !select) {\n      return null;\n    }\n    var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n    var _Selection$getSVGEven2 = Selection.getSVGEventCoordinates(evt, parentSVG),\n      x = _Selection$getSVGEven2.x,\n      y = _Selection$getSVGEven2.y;\n    var x2 = polar || dimension !== \"y\" ? x : Selection.getDomainCoordinates(targetProps).x[1];\n    var y2 = polar || dimension !== \"x\" ? y : Selection.getDomainCoordinates(targetProps).y[1];\n    return {\n      target: \"parent\",\n      mutation: function mutation() {\n        return {\n          x2: x2,\n          y2: y2,\n          parentSVG: parentSVG\n        };\n      }\n    };\n  },\n  onMouseUp: function onMouseUp(evt, targetProps) {\n    var activateSelectedData = targetProps.activateSelectedData,\n      allowSelection = targetProps.allowSelection,\n      x2 = targetProps.x2,\n      y2 = targetProps.y2;\n    if (!allowSelection) {\n      return null;\n    }\n    if (!x2 || !y2) {\n      return [{\n        target: \"parent\",\n        mutation: function mutation() {\n          return {\n            select: false,\n            x1: null,\n            x2: null,\n            y1: null,\n            y2: null\n          };\n        }\n      }];\n    }\n    var datasets = this.getDatasets(targetProps);\n    var bounds = Selection.getBounds(targetProps);\n    var selectedData = this.filterDatasets(targetProps, datasets, bounds);\n    var mutatedProps = {\n      selectedData: selectedData,\n      datasets: datasets,\n      select: false,\n      x1: null,\n      x2: null,\n      y1: null,\n      y2: null\n    };\n    var callbackMutation = selectedData && _isFunction(targetProps.onSelection) ? targetProps.onSelection(selectedData, bounds, _defaults({}, mutatedProps, targetProps)) : {};\n    var parentMutation = [{\n      target: \"parent\",\n      mutation: function mutation() {\n        return mutatedProps;\n      }\n    }];\n    var dataMutation = selectedData && activateSelectedData ? selectedData.map(function (d) {\n      return {\n        childName: d.childName,\n        eventKey: d.eventKey,\n        target: \"data\",\n        mutation: function mutation() {\n          return _assign({\n            active: true\n          }, callbackMutation);\n        }\n      };\n    }) : [];\n    return parentMutation.concat(dataMutation);\n  }\n};\nexport default _objectSpread(_objectSpread({}, SelectionHelpers), {}, {\n  onMouseDown: SelectionHelpers.onMouseDown.bind(SelectionHelpers),\n  onMouseUp: SelectionHelpers.onMouseUp.bind(SelectionHelpers),\n  onMouseMove: _throttle(SelectionHelpers.onMouseMove.bind(SelectionHelpers), 16,\n  // eslint-disable-line no-magic-numbers\n  {\n    leading: true,\n    trailing: false\n  })\n});","map":null,"metadata":{},"sourceType":"module"}