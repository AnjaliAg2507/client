{"ast":null,"code":"import _toConsumableArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\n\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\nconst topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\",\n    // add more topics and colors here...\n  };\n  const calculateHistogramData = (scoresByTopic) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n    for (const topic in scoresByTopic) {\n      const binCounts = new Array(bins.length - 1).fill(0);\n      const scores = scoresByTopic[topic];\n      for (const score of scores) {\n        for (let i = 1; i < bins.length; i++) {\n          if (score >= bins[i-1] && score < bins[i]) {\n            binCounts[i-1]++;\n            break;\n          }\n        }\n      }\n      const topicHistogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count, topic }));\n      histogramData.push(...topicHistogramData);\n    }\n    return histogramData;\n  };\n\n  const getUniqueRollNumbers = (data) => {\n    return new Set(data.map(student => student.roll_no)).size;\n  };\n\n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Topic Wise Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.filter(bin => bin.topic\n            ).map(bin => bin.x)}\nstyle={{\naxis: { stroke: '#000' },\ntickLabels: { fontSize: 12, padding: 5 },\n}}\n/>\n{data.map((bin) => (\n<VictoryBar\nkey={bin.topic}\ndata={[bin]}\nx=\"x\"\ny=\"y\"\nstyle={{\ndata: { fill: topicColorMap[bin.topic] || \"#c43a31\" },\nlabels: { fontSize: 12, fontWeight: 'bold' },\n}}\nlabelComponent={<VictoryTooltip />}\nlabels={({ datum }) => `Topic: ${bin.topic}\\nScore: ${datum.y}`}\n\n/>\n))}\n</VictoryChart>\n</div>\n);\n};\nexport default ScoreDistribution;\n\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\nvar ScoreDistribution = function ScoreDistribution() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedTopic = _useState6[0],\n    setSelectedTopic = _useState6[1];\n  useEffect(function () {\n    axios.get('http://localhost:8000/api/result').then(function (response) {\n      var scoresByTopic = groupScoresByTopic(response.data);\n      var histogramData = calculateHistogramData(scoresByTopic);\n      setData(histogramData);\n      setIsLoading(false);\n      setSelectedTopic(Object.keys(scoresByTopic)[0]);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoading(false);\n    });\n  }, []);\n  var groupScoresByTopic = function groupScoresByTopic(data) {\n    var scoresByTopic = {};\n    var _iterator = _createForOfIteratorHelper(data),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var student = _step.value;\n        var topic = student.topic,\n          point = student.point;\n        if (!scoresByTopic[topic]) {\n          scoresByTopic[topic] = [];\n        }\n        scoresByTopic[topic].push(point);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return scoresByTopic;\n  };\n  var topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\"\n    // add more topics and colors here...\n  };\n\n  var calculateHistogramData = function calculateHistogramData(scoresByTopic) {\n    var bins = [0, 5, 10, 15, 20, 25];\n    var histogramData = [];\n    var scores = scoresByTopic[selectedTopic];\n    var binCounts = new Array(bins.length - 1).fill(0);\n    var _iterator2 = _createForOfIteratorHelper(scores),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var score = _step2.value;\n        for (var i = 1; i < bins.length; i++) {\n          if (score >= bins[i - 1] && score < bins[i]) {\n            binCounts[i - 1]++;\n            break;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var topicHistogramData = binCounts.map(function (count, i) {\n      return {\n        x: \"\".concat(bins[i], \"-\").concat(bins[i + 1]),\n        y: count,\n        topic: selectedTopic\n      };\n    });\n    histogramData.push.apply(histogramData, _toConsumableArray(topicHistogramData));\n    return histogramData;\n  };\n  var handleTopicChange = function handleTopicChange(event) {\n    setSelectedTopic(event.target.value);\n  };\n  var getUniqueRollNumbers = function getUniqueRollNumbers(data) {\n    return new Set(data.map(function (student) {\n      return student.roll_no;\n    })).size;\n  };\n  var getMaxYValue = function getMaxYValue(data) {\n    var rollNumbersCount = getUniqueRollNumbers(data);\n    var maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    var tickCount = maxYValue / 5;\n    return {\n      maxYValue: maxYValue,\n      tickCount: tickCount\n    };\n  };\n  var _getMaxYValue = getMaxYValue(data),\n    maxYValue = _getMaxYValue.maxYValue,\n    tickCount = _getMaxYValue.tickCount;\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-distribution\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, \"Topic Wise Score Distribution\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"topics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, \"Select Topic:\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"topics\",\n    name: \"topics\",\n    value: selectedTopic,\n    onChange: handleTopicChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, Object.keys(groupScoresByTopic(data)).map(function (topic) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: topic,\n      value: topic,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, topic);\n  })), /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 20,\n    height: 300,\n    width: 500,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VictoryAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    tickCount: tickCount,\n    domain: [0, maxYValue],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VictoryBar, {\n    data: data,\n    x: \"x\",\n    y: \"y\",\n    style: {\n      data: {\n        fill: topicColorMap[selectedTopic]\n      },\n      labels: {\n        fontSize: 12,\n        fill: \"#333\"\n      }\n    },\n    labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  })));\n};\nexport default ScoreDistribution;","map":{"version":3,"names":["React","useState","useEffect","VictoryChart","VictoryBar","VictoryAxis","VictoryTooltip","axios","ScoreDistribution","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","data","setData","_useState5","_useState6","selectedTopic","setSelectedTopic","get","then","response","scoresByTopic","groupScoresByTopic","histogramData","calculateHistogramData","Object","keys","catch","error","console","log","_iterator","_createForOfIteratorHelper","_step","s","n","done","student","value","topic","point","push","err","e","f","topicColorMap","bins","scores","binCounts","Array","length","fill","_iterator2","_step2","score","i","topicHistogramData","map","count","x","concat","y","apply","_toConsumableArray","handleTopicChange","event","target","getUniqueRollNumbers","Set","roll_no","size","getMaxYValue","rollNumbersCount","maxYValue","Math","ceil","tickCount","_getMaxYValue","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onChange","key","domainPadding","height","width","dependentAxis","domain","style","labels","fontSize","labelComponent"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js"],"sourcesContent":["\n/*\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\n\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\nconst topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\",\n    // add more topics and colors here...\n  };\n  const calculateHistogramData = (scoresByTopic) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n    for (const topic in scoresByTopic) {\n      const binCounts = new Array(bins.length - 1).fill(0);\n      const scores = scoresByTopic[topic];\n      for (const score of scores) {\n        for (let i = 1; i < bins.length; i++) {\n          if (score >= bins[i-1] && score < bins[i]) {\n            binCounts[i-1]++;\n            break;\n          }\n        }\n      }\n      const topicHistogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count, topic }));\n      histogramData.push(...topicHistogramData);\n    }\n    return histogramData;\n  };\n\n  const getUniqueRollNumbers = (data) => {\n    return new Set(data.map(student => student.roll_no)).size;\n  };\n\n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Topic Wise Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.filter(bin => bin.topic\n            ).map(bin => bin.x)}\nstyle={{\naxis: { stroke: '#000' },\ntickLabels: { fontSize: 12, padding: 5 },\n}}\n/>\n{data.map((bin) => (\n<VictoryBar\nkey={bin.topic}\ndata={[bin]}\nx=\"x\"\ny=\"y\"\nstyle={{\ndata: { fill: topicColorMap[bin.topic] || \"#c43a31\" },\nlabels: { fontSize: 12, fontWeight: 'bold' },\n}}\nlabelComponent={<VictoryTooltip />}\nlabels={({ datum }) => `Topic: ${bin.topic}\\nScore: ${datum.y}`}\n\n/>\n))}\n</VictoryChart>\n</div>\n);\n};\nexport default ScoreDistribution;\n\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scoresByTopic = groupScoresByTopic(response.data);\n        const histogramData = calculateHistogramData(scoresByTopic);\n        setData(histogramData);\n        setIsLoading(false);\n        setSelectedTopic(Object.keys(scoresByTopic)[0]);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const groupScoresByTopic = (data) => {\n    const scoresByTopic = {};\n    for (const student of data) {\n      const { topic, point } = student;\n      if (!scoresByTopic[topic]) {\n        scoresByTopic[topic] = [];\n      }\n      scoresByTopic[topic].push(point);\n    }\n    return scoresByTopic;\n  };\n\n  const topicColorMap = {\n    \"Topic 1\": \"#c43a31\",\n    \"Topic 2\": \"#ff7f0e\",\n    \"Topic 3\": \"#2ca02c\",\n    \"Topic 4\": \"#9467bd\",\n    // add more topics and colors here...\n  };\n  \n  const calculateHistogramData = (scoresByTopic) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n    const scores = scoresByTopic[selectedTopic];\n    const binCounts = new Array(bins.length - 1).fill(0);\n    for (const score of scores) {\n      for (let i = 1; i < bins.length; i++) {\n        if (score >= bins[i-1] && score < bins[i]) {\n          binCounts[i-1]++;\n          break;\n        }\n      }\n    }\n    const topicHistogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count, topic: selectedTopic }));\n    histogramData.push(...topicHistogramData);\n    return histogramData;\n  };\n\n  const handleTopicChange = (event) => {\n    setSelectedTopic(event.target.value);\n  };\n\n  const getUniqueRollNumbers = (data) => {\n    return new Set(data.map(student => student.roll_no)).size;\n  };\n\n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\nreturn (\n  <div className=\"score-distribution\">\n    <h2>Topic Wise Score Distribution</h2>\n    <label htmlFor=\"topics\">Select Topic:</label>\n    <select id=\"topics\" name=\"topics\" value={selectedTopic} onChange={handleTopicChange}>\n      {Object.keys(groupScoresByTopic(data)).map(topic => (\n        <option key={topic} value={topic}>{topic}</option>\n      ))}\n    </select>\n    <VictoryChart domainPadding={20} height={300} width={500}>\n      <VictoryAxis />\n      <VictoryAxis dependentAxis tickCount={tickCount} domain={[0, maxYValue]} />\n      <VictoryBar\n        data={data}\n        x=\"x\"\n        y=\"y\"\n        style={{\n          data: {\n            fill: topicColorMap[selectedTopic]\n          },\n          labels: {\n            fontSize: 12,\n            fill: \"#333\"\n          }\n        }}\n        labelComponent={<VictoryTooltip />}\n      />\n    </VictoryChart>\n  </div>\n);\n};\n\nexport default ScoreDistribution;       \n\n\n\n\n\n\n         \n\n\n\n"],"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"},"metadata":{},"sourceType":"module"}