{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\n\n/*\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n\n    let contentHeight = pdfHeight + 10; // declare contentHeight using let keyword\n    const pageHeight = pdf.internal.pageSize.getHeight();\n\n    while (contentHeight > pageHeight) {\n      pdf.addPage();\n      const position = 10 - pageHeight;\n      pdf.addImage(imgData, 'PNG', 10, position, pdfWidth, pdfHeight);\n      contentHeight -= pageHeight; // update contentHeight variable's value\n    }\n\n    pdf.save('dashboard.pdf');\n  });\n};\n*/\nvar generatePdf = function generatePdf() {\n  var input = document.querySelector('#pdf-content');\n\n  // Get all the components\n  var components = input.children;\n\n  // Create a canvas element for each component and add it to the DOM\n  var _loop = function _loop() {\n    var component = components[i];\n    var canvas = document.createElement('canvas');\n    canvas.width = component.offsetWidth;\n    canvas.height = component.offsetHeight;\n    var context = canvas.getContext('2d');\n    context.scale(1, 1);\n    html2canvas(component).then(function (canvas) {\n      context.drawImage(canvas, 0, 0);\n    });\n    input.appendChild(canvas);\n  };\n  for (var i = 0; i < components.length; i++) {\n    _loop();\n  }\n\n  // Convert each canvas element to a PDF page\n  var pdf = new jsPDF();\n  var canvasElements = input.querySelectorAll('canvas');\n  for (var _i = 0; _i < canvasElements.length; _i++) {\n    var canvas = canvasElements[_i];\n    var imgData = canvas.toDataURL('image/png');\n    var imgProps = pdf.getImageProperties(imgData);\n    var pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    var pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n    if (_i < canvasElements.length - 1) {\n      pdf.addPage();\n    } else {\n      pdf.save('dashboard.pdf');\n    }\n  }\n\n  // Remove the canvas elements from the DOM\n  var canvasElementsToRemove = input.querySelectorAll('canvas');\n  for (var _i2 = 0; _i2 < canvasElementsToRemove.length; _i2++) {\n    input.removeChild(canvasElementsToRemove[_i2]);\n  }\n};\nvar Dashboard = function Dashboard() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"pdf-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Analysis Report\"), /*#__PURE__*/React.createElement(ScoreDistribution, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PassFailRate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TopicwiseTopPerformers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/scoreboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generatePdf,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Download PDF\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 22\n    }\n  }, \"Logout\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","html2canvas","jsPDF","Link","ScoreDistribution","PassFailRate","TopicwiseTopPerformers","generatePdf","input","document","querySelector","components","children","_loop","component","i","canvas","createElement","width","offsetWidth","height","offsetHeight","context","getContext","scale","then","drawImage","appendChild","length","pdf","canvasElements","querySelectorAll","imgData","toDataURL","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","addImage","addPage","save","canvasElementsToRemove","removeChild","Dashboard","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","to","onClick"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\n\n/*\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n\n    let contentHeight = pdfHeight + 10; // declare contentHeight using let keyword\n    const pageHeight = pdf.internal.pageSize.getHeight();\n\n    while (contentHeight > pageHeight) {\n      pdf.addPage();\n      const position = 10 - pageHeight;\n      pdf.addImage(imgData, 'PNG', 10, position, pdfWidth, pdfHeight);\n      contentHeight -= pageHeight; // update contentHeight variable's value\n    }\n\n    pdf.save('dashboard.pdf');\n  });\n};\n*/\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  // Get all the components\n  const components = input.children;\n\n  // Create a canvas element for each component and add it to the DOM\n  for (let i = 0; i < components.length; i++) {\n    const component = components[i];\n    const canvas = document.createElement('canvas');\n    canvas.width = component.offsetWidth;\n    canvas.height = component.offsetHeight;\n    const context = canvas.getContext('2d');\n    context.scale(1, 1);\n    html2canvas(component).then((canvas) => {\n      context.drawImage(canvas, 0, 0);\n    });\n    input.appendChild(canvas);\n  }\n\n  // Convert each canvas element to a PDF page\n  const pdf = new jsPDF();\n  const canvasElements = input.querySelectorAll('canvas');\n  for (let i = 0; i < canvasElements.length; i++) {\n    const canvas = canvasElements[i];\n    const imgData = canvas.toDataURL('image/png');\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n    if (i < canvasElements.length - 1) {\n      pdf.addPage();\n    } else {\n      pdf.save('dashboard.pdf');\n    }\n  }\n\n  // Remove the canvas elements from the DOM\n  const canvasElementsToRemove = input.querySelectorAll('canvas');\n  for (let i = 0; i < canvasElementsToRemove.length; i++) {\n    input.removeChild(canvasElementsToRemove[i]);\n  }\n};\n\n\nconst Dashboard = () => {\n  return (\n    <div className=\"dashboard\">\n      <div id=\"pdf-content\">\n        <h1>Analysis Report</h1>\n        <ScoreDistribution />\n        <PassFailRate />\n        <TopicwiseTopPerformers />\n      </div>\n      <div className=\"button-container\">\n        <Link to=\"/scoreboard\"><button>Back</button></Link>\n        <button onClick={generatePdf}>Download PDF</button>\n        <Link to=\"/\"><button>Logout</button></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}