{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { VictoryContainer, Rect } from \"victory-core\";\nimport SelectionHelpers from \"./selection-helpers\";\nexport var selectionContainerMixin = function selectionContainerMixin(base) {\n  var _class;\n  return _class = /*#__PURE__*/function (_base) {\n    _inherits(VictorySelectionContainer, _base);\n    var _super = _createSuper(VictorySelectionContainer);\n    function VictorySelectionContainer() {\n      _classCallCheck(this, VictorySelectionContainer);\n      return _super.apply(this, arguments);\n    }\n    _createClass(VictorySelectionContainer, [{\n      key: \"getRect\",\n      value: function getRect(props) {\n        var x1 = props.x1,\n          x2 = props.x2,\n          y1 = props.y1,\n          y2 = props.y2,\n          selectionStyle = props.selectionStyle,\n          selectionComponent = props.selectionComponent,\n          name = props.name;\n        var width = Math.abs(x2 - x1) || 1;\n        var height = Math.abs(y2 - y1) || 1;\n        var x = Math.min(x1, x2);\n        var y = Math.min(y1, y2);\n        return y2 && x2 && x1 && y1 ? /*#__PURE__*/React.cloneElement(selectionComponent, {\n          key: \"\".concat(name, \"-selection\"),\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          style: selectionStyle\n        }) : null;\n      } // Overrides method in VictoryContainer\n    }, {\n      key: \"getChildren\",\n      value: function getChildren(props) {\n        return [].concat(_toConsumableArray(React.Children.toArray(props.children)), [this.getRect(props)]);\n      }\n    }]);\n    return VictorySelectionContainer;\n  }(base), _class.displayName = \"VictorySelectionContainer\", _class.propTypes = _objectSpread(_objectSpread({}, VictoryContainer.propTypes), {}, {\n    activateSelectedData: PropTypes.bool,\n    allowSelection: PropTypes.bool,\n    disable: PropTypes.bool,\n    onSelection: PropTypes.func,\n    onSelectionCleared: PropTypes.func,\n    selectionBlacklist: PropTypes.arrayOf(PropTypes.string),\n    selectionComponent: PropTypes.element,\n    selectionDimension: PropTypes.oneOf([\"x\", \"y\"]),\n    selectionStyle: PropTypes.object\n  }), _class.defaultProps = _objectSpread(_objectSpread({}, VictoryContainer.defaultProps), {}, {\n    activateSelectedData: true,\n    allowSelection: true,\n    selectionComponent: /*#__PURE__*/React.createElement(Rect, null),\n    selectionStyle: {\n      stroke: \"transparent\",\n      fill: \"black\",\n      fillOpacity: 0.1\n    }\n  }), _class.defaultEvents = function (props) {\n    return [{\n      target: \"parent\",\n      eventHandlers: {\n        onMouseDown: function onMouseDown(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseDown(evt, targetProps);\n        },\n        onTouchStart: function onTouchStart(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseDown(evt, targetProps);\n        },\n        onMouseMove: function onMouseMove(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseMove(evt, targetProps);\n        },\n        onTouchMove: function onTouchMove(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseMove(evt, targetProps);\n        },\n        onMouseUp: function onMouseUp(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseUp(evt, targetProps);\n        },\n        onTouchEnd: function onTouchEnd(evt, targetProps) {\n          return props.disable ? {} : SelectionHelpers.onMouseUp(evt, targetProps);\n        }\n      }\n    }];\n  }, _class;\n};\nexport default selectionContainerMixin(VictoryContainer); // @ts-expect-error IMPORTANT: when converting this file to TypeScript, you must export the type as well:\n// export const VictorySelectionContainer = selectionContainerMixin(VictoryContainer);\n// export type VictorySelectionContainer = typeof VictorySelectionContainer;","map":null,"metadata":{},"sourceType":"module"}