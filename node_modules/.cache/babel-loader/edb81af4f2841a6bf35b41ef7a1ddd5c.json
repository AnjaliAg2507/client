{"ast":null,"code":"import _mapValues from \"lodash/mapValues\";\nimport _isFunction from \"lodash/isFunction\";\nimport _throttle from \"lodash/throttle\";\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nimport { Selection } from \"victory-core\";\nvar ON_MOUSE_MOVE_THROTTLE_MS = 16;\nvar CursorHelpersClass = /*#__PURE__*/function () {\n  function CursorHelpersClass() {\n    var _this = this;\n    _classCallCheck(this, CursorHelpersClass);\n    this.handleMouseMove = function (evt, targetProps) {\n      var onCursorChange = targetProps.onCursorChange,\n        domain = targetProps.domain;\n      var cursorDimension = _this.getDimension(targetProps);\n      var parentSVG = targetProps.parentSVG || Selection.getParentSVG(evt);\n      var cursorSVGPosition = Selection.getSVGEventCoordinates(evt, parentSVG);\n      var cursorValue = Selection.getDataCoordinates(targetProps, targetProps.scale, cursorSVGPosition.x, cursorSVGPosition.y);\n      var inBounds = _this.withinBounds(cursorValue, {\n        x1: domain.x[0],\n        x2: domain.x[1],\n        y1: domain.y[0],\n        y2: domain.y[1]\n      });\n      if (!inBounds) {\n        cursorValue = null;\n      }\n      if (_isFunction(onCursorChange)) {\n        if (cursorValue) {\n          var value = cursorDimension ? cursorValue[cursorDimension] : cursorValue;\n          onCursorChange(value, targetProps);\n        } else if (cursorValue !== targetProps.cursorValue) {\n          onCursorChange(targetProps.defaultCursorValue || null, targetProps);\n        }\n      }\n      return [{\n        target: \"parent\",\n        eventKey: \"parent\",\n        mutation: function mutation() {\n          return {\n            cursorValue: cursorValue,\n            parentSVG: parentSVG\n          };\n        }\n      }];\n    };\n    this.onMouseMove = _throttle(this.handleMouseMove, ON_MOUSE_MOVE_THROTTLE_MS, {\n      leading: true,\n      trailing: false\n    });\n    this.onMouseLeave = this.handleMouseMove;\n    this.onTouchEnd = function (evt, targetProps) {\n      var onCursorChange = targetProps.onCursorChange;\n      if (_isFunction(targetProps.onCursorChange)) {\n        onCursorChange(null, targetProps);\n      }\n      return [{\n        target: \"parent\",\n        eventKey: \"parent\",\n        mutation: function mutation() {\n          return {\n            cursorValue: null\n          };\n        }\n      }];\n    };\n  }\n  _createClass(CursorHelpersClass, [{\n    key: \"getDimension\",\n    value: function getDimension(props) {\n      var horizontal = props.horizontal,\n        cursorDimension = props.cursorDimension;\n      if (!horizontal || !cursorDimension) {\n        return cursorDimension;\n      }\n      return cursorDimension === \"x\" ? \"y\" : \"x\";\n    }\n  }, {\n    key: \"withinBounds\",\n    value: function withinBounds(point, bounds) {\n      var _mapValues2 = _mapValues(bounds, Number),\n        x1 = _mapValues2.x1,\n        x2 = _mapValues2.x2,\n        y1 = _mapValues2.y1,\n        y2 = _mapValues2.y2;\n      var _mapValues3 = _mapValues(point, Number),\n        x = _mapValues3.x,\n        y = _mapValues3.y;\n      return x >= Math.min(x1, x2) && x <= Math.max(x1, x2) && y >= Math.min(y1, y2) && y <= Math.max(y1, y2);\n    }\n  }]);\n  return CursorHelpersClass;\n}();\nexport var CursorHelpers = new CursorHelpersClass();\n/* {\n  ...CursorHelpers,\n  onMouseMove: throttle(\n    CursorHelpers.onMouseMove.bind(CursorHelpers),\n    ON_MOUSE_MOVE_THROTTLE_MS,\n    {\n      leading: true,\n      trailing: false,\n    },\n  ),\n  onMouseLeave: CursorHelpers.onMouseMove.bind(CursorHelpers),\n  onTouchEnd: CursorHelpers.onTouchEnd.bind(CursorHelpers),\n};\n\n\n   */","map":null,"metadata":{},"sourceType":"module"}