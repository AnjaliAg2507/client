{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/Quiz.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport './styles/Quiz.css';\nimport Score from './Score';\nimport axios from 'axios';\nvar Quiz = function Quiz() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showScore = _useState6[0],\n    setShowScore = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    score = _useState8[0],\n    setScore = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isLoading = _useState10[0],\n    setIsLoading = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    hasPostedResults = _useState12[0],\n    setHasPostedResults = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    previousDifficulty = _useState14[0],\n    setPreviousDifficulty = _useState14[1];\n  useEffect(function () {\n    // Make an HTTP GET request to your backend API endpoint\n    axios.get('http://localhost:8000/api/questions').then(function (response) {\n      // Set the questions state variable to the data retrieved from the API\n      setQuestions(_.shuffle(response.data));\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoading(false);\n    });\n  }, []);\n\n  /*const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n     const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };*/\n\n  var handleAnswerOptionClick = function handleAnswerOptionClick(isCorrect, difficulty) {\n    var newScore = score;\n    if (isCorrect) {\n      if (difficulty === 'easy') {\n        newScore += 1;\n      } else if (difficulty === 'medium') {\n        newScore += 2;\n      } else if (difficulty === 'hard') {\n        newScore += 3;\n      }\n    }\n    var nextQuestion = currentQuestion + 1;\n    if (currentQuestion === 1) {\n      if (isCorrect) {\n        nextQuestion += 1;\n      }\n    } else if (currentQuestion > 1 && currentQuestion % 3 === 2) {\n      if (newScore >= 6) {\n        nextQuestion += 1;\n      } else if (newScore >= 3) {\n        var randomNum = Math.floor(Math.random() * 2);\n        nextQuestion += randomNum;\n      }\n    }\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setScore(newScore);\n    } else {\n      setShowScore(true);\n    }\n  };\n  var getQuestionDifficulty = function getQuestionDifficulty(questionIndex) {\n    return questions[questionIndex].difficulty;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Loading\") : showScore ? /*#__PURE__*/React.createElement(Score, {\n    score: score,\n    totalQuestions: questions.length,\n    hasPostedResults: hasPostedResults,\n    setHasPostedResults: setHasPostedResults,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"difficulty-level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Difficulty level: \", questions[currentQuestion].difficulty)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, _.chunk(_.shuffle(questions[currentQuestion].options), 2).map(function (optionChunk) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, optionChunk.map(function (option) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return handleAnswerOptionClick(option === questions[currentQuestion].answer);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, option);\n    }));\n  }))));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useState","useEffect","useRef","_","Link","Score","axios","Quiz","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","score","setScore","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","hasPostedResults","setHasPostedResults","_useState13","_useState14","previousDifficulty","setPreviousDifficulty","get","then","response","shuffle","data","catch","error","console","log","handleAnswerOptionClick","isCorrect","difficulty","newScore","nextQuestion","randomNum","Math","floor","random","length","getQuestionDifficulty","questionIndex","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","totalQuestions","Fragment","question","chunk","options","map","optionChunk","option","onClick","answer"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport './styles/Quiz.css';\nimport Score from './Score';\nimport axios from 'axios';\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasPostedResults, setHasPostedResults] = useState(false);\n  const [previousDifficulty, setPreviousDifficulty] = useState(null);\n\n  useEffect(() => {\n    // Make an HTTP GET request to your backend API endpoint\n    axios\n      .get('http://localhost:8000/api/questions')\n      .then((response) => {\n        // Set the questions state variable to the data retrieved from the API\n        setQuestions(_.shuffle(response.data));\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  /*const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };*/\n\nconst handleAnswerOptionClick = (isCorrect, difficulty) => {\n  let newScore = score;\n\n  if (isCorrect) {\n    if (difficulty === 'easy') {\n      newScore += 1;\n    } else if (difficulty === 'medium') {\n      newScore += 2;\n    } else if (difficulty === 'hard') {\n      newScore += 3;\n    }\n  }\n\n  let nextQuestion = currentQuestion + 1;\n\n  if (currentQuestion === 1) {\n    if (isCorrect) {\n      nextQuestion += 1;\n    }\n  } else if (currentQuestion > 1 && currentQuestion % 3 === 2) {\n    if (newScore >= 6) {\n      nextQuestion += 1;\n    } else if (newScore >= 3) {\n      let randomNum = Math.floor(Math.random() * 2);\n      nextQuestion += randomNum;\n    }\n  }\n\n  if (nextQuestion < questions.length) {\n    setCurrentQuestion(nextQuestion);\n    setScore(newScore);\n  } else {\n    setShowScore(true);\n  }\n};\n  \n  const getQuestionDifficulty = (questionIndex) => {\n    return questions[questionIndex].difficulty;\n  }\n\n  return (\n    <div className=\"quiz\">\n      {isLoading ? (\n        <div className=\"loading\">Loading</div>\n      ) : showScore ? (\n        <Score\n          score={score}\n          totalQuestions={questions.length}\n          hasPostedResults={hasPostedResults}\n          setHasPostedResults={setHasPostedResults}\n        />\n      ) : (\n         <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n            <div className=\"difficulty-level\">Difficulty level: {questions[currentQuestion].difficulty}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button\n                    onClick={() =>\n                      handleAnswerOptionClick(option === questions[currentQuestion].answer)\n                    }\n                  >\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}