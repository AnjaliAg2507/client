{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/ons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js\";\nimport React, { useState } from \"react\";\nimport { quizData } from \"./quizData\";\nimport './Quiz.css';\nvar Quiz = function Quiz() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestion = _useState2[0],\n    setCurrentQuestion = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showScore = _useState4[0],\n    setShowScore = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    score = _useState6[0],\n    setScore = _useState6[1];\n  var handleAnswerOptionClick = function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    /*const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n    };\n    */\n    var shuffledOptions = shuffleArray(quizData[currentQuestion + 1].options);\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.length) {\n      setCurrentQuestion(nextQuestion);\n      setOptions(shuffledOptions);\n    } else {\n      setShowScore(true);\n    }\n  };\n  // Function to shuffle an array\n  var shuffleArray = function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var _ref = [array[j], array[i]];\n      array[i] = _ref[0];\n      array[j] = _ref[1];\n    }\n    return array;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"You scored \", score, \" out of \", quizData.length) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", quizData.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, quizData[currentQuestion].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, quizData[currentQuestion].options.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"option-btn\",\n      onClick: function onClick() {\n        return handleAnswerOptionClick(option === quizData[currentQuestion].answer);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, option);\n  }))));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useState","quizData","Quiz","_useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","showScore","setShowScore","_useState5","_useState6","score","setScore","handleAnswerOptionClick","isCorrect","shuffledOptions","shuffleArray","options","nextQuestion","length","setOptions","array","i","j","Math","floor","random","_ref","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","question","map","option","onClick","answer"],"sources":["/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { quizData } from \"./quizData\";\nimport './Quiz.css';\n\nconst Quiz = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    /*const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n*/\n    let shuffledOptions = shuffleArray(quizData[currentQuestion + 1].options);\n\n  const nextQuestion = currentQuestion + 1;\n  if (nextQuestion < quizData.length) {\n    setCurrentQuestion(nextQuestion);\n    setOptions(shuffledOptions);\n  } else {\n    setShowScore(true);\n  }\n};\n// Function to shuffle an array\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <div className=\"score-section\">\n          You scored {score} out of {quizData.length}\n        </div>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{quizData.length}\n            </div>\n            <div className=\"question-text\">{quizData[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n  {quizData[currentQuestion].options.map((option) => (\n    <button className=\"option-btn\" onClick={() => handleAnswerOptionClick(option === quizData[currentQuestion].answer)}>\n      {option}\n    </button>\n  ))}\n</div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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"},"metadata":{},"sourceType":"module"}