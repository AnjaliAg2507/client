{"ast":null,"code":"var _excluded = [\"children\", \"title\", \"desc\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport var Text = function Text(props) {\n  var children = props.children,\n    title = props.title,\n    desc = props.desc,\n    rest = _objectWithoutProperties(props, _excluded);\n  return /*#__PURE__*/(\n    // @ts-expect-error FIXME: \"id cannot be a number\"\n    React.createElement(\"text\", rest, title && /*#__PURE__*/React.createElement(\"title\", null, title), desc && /*#__PURE__*/React.createElement(\"desc\", null, desc), children)\n  );\n};\nText.propTypes = {\n  children: PropTypes.node,\n  desc: PropTypes.string,\n  title: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}