{"ast":null,"code":"import _slicedToArray from \"/Users/anjaliagrawal/Desktop/ons/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js\";\n/*\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport './Quiz.css';\n\nimport Score from './Score';\nimport {quizData} from './quizData';\n\n\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n \n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz}/>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;*/\n\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport './Quiz.css';\nimport Score from './Score';\nimport { quizData } from './quizData';\nvar Quiz = function Quiz() {\n  var _useState = useState(_.shuffle(quizData)),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showScore = _useState6[0],\n    setShowScore = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    score = _useState8[0],\n    setScore = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    disableOptions = _useState10[0],\n    setDisableOptions = _useState10[1];\n  var handleAnswerOptionClick = function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setDisableOptions(true);\n  };\n  var handleNextButtonClick = function handleNextButtonClick() {\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setDisableOptions(false);\n    } else {\n      setShowScore(true);\n    }\n  };\n  var handlePrevButtonClick = function handlePrevButtonClick() {\n    var prevQuestion = currentQuestion - 1;\n    if (prevQuestion >= 0) {\n      setCurrentQuestion(prevQuestion);\n      setDisableOptions(false);\n    }\n  };\n  var restartQuiz = function restartQuiz() {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setDisableOptions(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, showScore ? /*#__PURE__*/React.createElement(Score, {\n    score: score,\n    totalQuestions: questions.length,\n    restartQuiz: restartQuiz,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Question \", currentQuestion + 1), \"/\", questions.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, _.chunk(_.shuffle(questions[currentQuestion].options), 2).map(function (optionChunk) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, optionChunk.map(function (option) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return handleAnswerOptionClick(option === questions[currentQuestion].answer);\n        },\n        disabled: disableOptions,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, option);\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrevButtonClick,\n    disabled: currentQuestion === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, currentQuestion === questions.length - 1 ? 'Finish' : 'Next'))));\n};\nexport default Quiz;","map":{"version":3,"names":["React","useState","_","Link","Score","quizData","Quiz","_useState","shuffle","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","showScore","setShowScore","_useState7","_useState8","score","setScore","_useState9","_useState10","disableOptions","setDisableOptions","handleAnswerOptionClick","isCorrect","handleNextButtonClick","nextQuestion","length","handlePrevButtonClick","prevQuestion","restartQuiz","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","totalQuestions","Fragment","question","chunk","options","map","optionChunk","option","onClick","answer","disabled"],"sources":["/Users/anjaliagrawal/Desktop/ons/src/components/Quiz.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport './Quiz.css';\n\nimport Score from './Score';\nimport {quizData} from './quizData';\n\n\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n \n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz}/>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}>\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;*/\n\n\n\n\nimport React, { useState } from 'react';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom'\nimport './Quiz.css';\n\nimport Score from './Score';\nimport { quizData } from './quizData';\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState(_.shuffle(quizData));\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [disableOptions, setDisableOptions] = useState(false);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setDisableOptions(true);\n  };\n\n  const handleNextButtonClick = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n      setDisableOptions(false);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handlePrevButtonClick = () => {\n    const prevQuestion = currentQuestion - 1;\n    if (prevQuestion >= 0) {\n      setCurrentQuestion(prevQuestion);\n      setDisableOptions(false);\n    }\n  };\n\n  const restartQuiz = () => {\n    setQuestions(_.shuffle(quizData));\n    setCurrentQuestion(0);\n    setShowScore(false);\n    setScore(0);\n    setDisableOptions(false);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {showScore ? (\n        <Score score={score} totalQuestions={questions.length} restartQuiz={restartQuiz} />\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].question}</div>\n          </div>\n          <div className=\"answer-section\">\n            {_.chunk(_.shuffle(questions[currentQuestion].options), 2).map((optionChunk) => (\n              <div className=\"answer-row\">\n                {optionChunk.map((option) => (\n                  <button\n                    onClick={() => handleAnswerOptionClick(option === questions[currentQuestion].answer)}\n                    disabled={disableOptions}\n                  >\n                    {option}\n                  </button>\n                ))}\n              </div>\n            ))}\n          </div>\n          <div className=\"button-section\">\n            <button onClick={handlePrevButtonClick} disabled={currentQuestion === 0}>\n              Previous\n            </button>\n            <button onClick={handleNextButtonClick}>\n              {currentQuestion === questions.length - 1 ? 'Finish' : 'Next'}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}