{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'jspdf', 'html2canvas'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('jspdf'), require('html2canvas'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.jspdf, global.html2canvas);\n    global.ReactToPdf = mod.exports;\n  }\n})(this, function (exports, _react, _jspdf, _html2canvas) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _react2 = _interopRequireDefault(_react);\n  var _jspdf2 = _interopRequireDefault(_jspdf);\n  var _html2canvas2 = _interopRequireDefault(_html2canvas);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  var ReactToPdf = function (_PureComponent) {\n    _inherits(ReactToPdf, _PureComponent);\n    function ReactToPdf(props) {\n      _classCallCheck(this, ReactToPdf);\n      var _this = _possibleConstructorReturn(this, (ReactToPdf.__proto__ || Object.getPrototypeOf(ReactToPdf)).call(this, props));\n      _this.toPdf = _this.toPdf.bind(_this);\n      _this.targetRef = _react2.default.createRef();\n      return _this;\n    }\n    _createClass(ReactToPdf, [{\n      key: 'toPdf',\n      value: function toPdf() {\n        var _props = this.props,\n          targetRef = _props.targetRef,\n          filename = _props.filename,\n          x = _props.x,\n          y = _props.y,\n          options = _props.options,\n          onComplete = _props.onComplete;\n        var source = targetRef || this.targetRef;\n        var targetComponent = source.current || source;\n        if (!targetComponent) {\n          throw new Error('Target ref must be used or informed. See https://github.com/ivmarcos/react-to-pdf#usage.');\n        }\n        (0, _html2canvas2.default)(targetComponent, {\n          logging: false,\n          useCORS: true,\n          scale: this.props.scale\n        }).then(function (canvas) {\n          var imgData = canvas.toDataURL();\n          var pdf = new _jspdf2.default(options);\n          pdf.addImage(imgData, 'JPEG', x, y);\n          pdf.save(filename);\n          if (onComplete) onComplete();\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var children = this.props.children;\n        return children({\n          toPdf: this.toPdf,\n          targetRef: this.targetRef\n        });\n      }\n    }]);\n    return ReactToPdf;\n  }(_react.PureComponent);\n  ReactToPdf.defaultProps = {\n    filename: 'download.pdf',\n    options: undefined,\n    x: 0,\n    y: 0,\n    scale: 1,\n    onComplete: undefined,\n    targetRef: undefined\n  };\n  exports.default = ReactToPdf;\n});","map":null,"metadata":{},"sourceType":"script"}