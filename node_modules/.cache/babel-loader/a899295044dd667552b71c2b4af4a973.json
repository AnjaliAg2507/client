{"ast":null,"code":"import _isObject from \"lodash/isObject\";\nimport _assign from \"lodash/assign\";\nimport _defaults from \"lodash/defaults\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { VictoryContainer, VictoryLabel, LineSegment, Helpers } from \"victory-core\";\nimport { CursorHelpers } from \"./cursor-helpers\";\nexport function cursorContainerMixin(Base) {\n  var _class;\n\n  // @ts-expect-error \"TS2545: A mixin class must have a constructor with a single rest parameter of type 'any[]'.\"\n  return _class = /*#__PURE__*/function (_Base) {\n    _inherits(VictoryCursorContainer, _Base);\n    var _super = _createSuper(VictoryCursorContainer);\n    function VictoryCursorContainer() {\n      _classCallCheck(this, VictoryCursorContainer);\n      return _super.apply(this, arguments);\n    }\n    _createClass(VictoryCursorContainer, [{\n      key: \"getCursorPosition\",\n      value: function getCursorPosition(props) {\n        var cursorValue = props.cursorValue,\n          defaultCursorValue = props.defaultCursorValue,\n          domain = props.domain,\n          cursorDimension = props.cursorDimension;\n        if (cursorValue) {\n          return cursorValue;\n        }\n        if (typeof defaultCursorValue === \"number\") {\n          return _defineProperty({\n            x: (domain.x[0] + domain.x[1]) / 2,\n            y: (domain.y[0] + domain.y[1]) / 2\n          }, cursorDimension, defaultCursorValue);\n        }\n        return defaultCursorValue;\n      }\n    }, {\n      key: \"getCursorLabelOffset\",\n      value: function getCursorLabelOffset(props) {\n        var cursorLabelOffset = props.cursorLabelOffset;\n        if (typeof cursorLabelOffset === \"number\") {\n          return {\n            x: cursorLabelOffset,\n            y: cursorLabelOffset\n          };\n        }\n        return cursorLabelOffset;\n      }\n    }, {\n      key: \"getPadding\",\n      value: function getPadding(props) {\n        if (props.padding === undefined) {\n          var child = props.children.find(function (c) {\n            return _isObject(c.props) && c.props.padding !== undefined;\n          });\n          return Helpers.getPadding(child.props);\n        }\n        return Helpers.getPadding(props);\n      }\n    }, {\n      key: \"getCursorElements\",\n      value: function getCursorElements(props) {\n        // eslint-disable-line max-statements\n        var scale = props.scale,\n          cursorLabelComponent = props.cursorLabelComponent,\n          cursorLabel = props.cursorLabel,\n          cursorComponent = props.cursorComponent,\n          width = props.width,\n          height = props.height,\n          name = props.name,\n          horizontal = props.horizontal,\n          theme = props.theme;\n        var cursorDimension = CursorHelpers.getDimension(props);\n        var cursorValue = this.getCursorPosition(props);\n        var cursorLabelOffset = this.getCursorLabelOffset(props);\n        if (!cursorValue) {\n          return [];\n        }\n        var newElements = [];\n        var padding = this.getPadding(props);\n        var cursorCoordinates = {\n          x: horizontal ? scale.y(cursorValue.y) : scale.x(cursorValue.x),\n          y: horizontal ? scale.x(cursorValue.x) : scale.y(cursorValue.y)\n        };\n        if (cursorLabel) {\n          var labelProps = _defaults({\n            active: true\n          }, cursorLabelComponent.props, {\n            x: cursorCoordinates.x + cursorLabelOffset.x,\n            y: cursorCoordinates.y + cursorLabelOffset.y,\n            datum: cursorValue,\n            active: true,\n            key: \"\".concat(name, \"-cursor-label\")\n          });\n          if (Helpers.isTooltip(cursorLabelComponent)) {\n            var tooltipTheme = theme && theme.tooltip || {};\n            labelProps = _defaults({}, labelProps, tooltipTheme);\n          }\n          newElements.push( /*#__PURE__*/React.cloneElement(cursorLabelComponent, _defaults({}, labelProps, {\n            text: Helpers.evaluateProp(cursorLabel, labelProps)\n          })));\n        }\n        var cursorStyle = _assign({\n          stroke: \"black\"\n        }, cursorComponent.props.style);\n        if (cursorDimension === \"x\" || cursorDimension === undefined) {\n          newElements.push( /*#__PURE__*/React.cloneElement(cursorComponent, {\n            key: \"\".concat(name, \"-x-cursor\"),\n            x1: cursorCoordinates.x,\n            x2: cursorCoordinates.x,\n            y1: padding.top,\n            y2: height - padding.bottom,\n            style: cursorStyle\n          }));\n        }\n        if (cursorDimension === \"y\" || cursorDimension === undefined) {\n          newElements.push( /*#__PURE__*/React.cloneElement(cursorComponent, {\n            key: \"\".concat(name, \"-y-cursor\"),\n            x1: padding.left,\n            x2: width - padding.right,\n            y1: cursorCoordinates.y,\n            y2: cursorCoordinates.y,\n            style: cursorStyle\n          }));\n        }\n        return newElements;\n      } // Overrides method in VictoryContainer\n    }, {\n      key: \"getChildren\",\n      value: function getChildren(props) {\n        return [].concat(_toConsumableArray(React.Children.toArray(props.children)), _toConsumableArray(this.getCursorElements(props)));\n      }\n    }]);\n    return VictoryCursorContainer;\n  }(Base), _class.displayName = \"VictoryCursorContainer\", _class.propTypes = _objectSpread(_objectSpread({}, VictoryContainer.propTypes), {}, {\n    cursorDimension: PropTypes.oneOf([\"x\", \"y\"]),\n    cursorLabel: PropTypes.func,\n    cursorLabelComponent: PropTypes.element,\n    cursorLabelOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    })]),\n    defaultCursorValue: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    })]),\n    disable: PropTypes.bool,\n    onCursorChange: PropTypes.func\n  }), _class.defaultProps = _objectSpread(_objectSpread({}, VictoryContainer.defaultProps), {}, {\n    cursorLabelComponent: /*#__PURE__*/React.createElement(VictoryLabel, null),\n    cursorLabelOffset: {\n      x: 5,\n      y: -10\n    },\n    cursorComponent: /*#__PURE__*/React.createElement(LineSegment, null)\n  }), _class.defaultEvents = function (props) {\n    return [{\n      target: \"parent\",\n      eventHandlers: {\n        onMouseLeave: function onMouseLeave(evt, targetProps) {\n          return props.disable ? {} : CursorHelpers.onMouseLeave(evt, targetProps);\n        },\n        onTouchCancel: function onTouchCancel() {\n          return [];\n        },\n        onMouseMove: function onMouseMove(evt, targetProps) {\n          return props.disable ? {} : CursorHelpers.onMouseMove(evt, targetProps);\n        },\n        onTouchMove: function onTouchMove(evt, targetProps) {\n          return props.disable ? {} : CursorHelpers.onMouseMove(evt, targetProps);\n        }\n      }\n    }];\n  }, _class;\n}\nexport var VictoryCursorContainer = cursorContainerMixin(VictoryContainer);","map":null,"metadata":{},"sourceType":"module"}