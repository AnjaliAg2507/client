{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\nvar generatePdf = function generatePdf() {\n  var input = document.querySelector('#pdf-content');\n  html2canvas(input, {\n    logging: false\n  }).then(function (canvas) {\n    var imgData = canvas.toDataURL('image/png');\n    var pdf = new jsPDF();\n    var imgProps = pdf.getImageProperties(imgData);\n    var pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    var pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n\n    // Add the initial page\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n    var contentHeight = pdfHeight + 10;\n    var pageHeight = pdf.internal.pageSize.getHeight();\n\n    // Loop through the components and add them to the PDF\n    var components = input.children;\n    for (var i = 0; i < components.length; i++) {\n      var component = components[i];\n      html2canvas(component).then(function (componentCanvas) {\n        var componentImgData = componentCanvas.toDataURL('image/png');\n        var componentImgProps = pdf.getImageProperties(componentImgData);\n        var componentPdfHeight = componentImgProps.height * pdfWidth / componentImgProps.width;\n\n        // Add the component to the PDF\n        pdf.addImage(componentImgData, 'PNG', 10, contentHeight, pdfWidth, componentPdfHeight);\n\n        // Adjust the content height and add a new page if necessary\n        contentHeight += componentPdfHeight + 10;\n        if (contentHeight > pageHeight) {\n          pdf.addPage();\n          contentHeight = 10;\n        }\n      });\n    }\n\n    // Save the PDF\n    setTimeout(function () {\n      // setTimeout is used to wait for all the components to be loaded before saving the PDF\n      pdf.save('dashboard.pdf');\n    }, 1000);\n  });\n};\nvar Dashboard = function Dashboard() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"pdf-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Analysis Report\"), /*#__PURE__*/React.createElement(TopicwiseTopPerformers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ScoreDistribution, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PassFailRate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/scoreboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generatePdf,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Download PDF\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  }, \"Logout\"))));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","html2canvas","jsPDF","Link","ScoreDistribution","PassFailRate","TopicwiseTopPerformers","generatePdf","input","document","querySelector","logging","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","contentHeight","pageHeight","getHeight","components","children","i","length","component","componentCanvas","componentImgData","componentImgProps","componentPdfHeight","addPage","setTimeout","save","Dashboard","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","to","onClick"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nimport { Link } from 'react-router-dom';\nimport ScoreDistribution from './ScoreDistribution';\nimport PassFailRate from './PassFailRate';\nimport TopicwiseTopPerformers from './TopicwiseTopPerformers';\nimport './styles/Dashboard.css';\n\nconst generatePdf = () => {\n  const input = document.querySelector('#pdf-content');\n\n  html2canvas(input, { logging: false }).then((canvas) => {\n    const imgData = canvas.toDataURL('image/png');\n    const pdf = new jsPDF();\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth() - 20;\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n\n    // Add the initial page\n    pdf.addImage(imgData, 'PNG', 10, 10, pdfWidth, pdfHeight);\n\n    let contentHeight = pdfHeight + 10;\n    const pageHeight = pdf.internal.pageSize.getHeight();\n\n    // Loop through the components and add them to the PDF\n    const components = input.children;\n    for (let i = 0; i < components.length; i++) {\n      const component = components[i];\n      html2canvas(component).then((componentCanvas) => {\n        const componentImgData = componentCanvas.toDataURL('image/png');\n        const componentImgProps = pdf.getImageProperties(componentImgData);\n        const componentPdfHeight = (componentImgProps.height * pdfWidth) / componentImgProps.width;\n\n        // Add the component to the PDF\n        pdf.addImage(componentImgData, 'PNG', 10, contentHeight, pdfWidth, componentPdfHeight);\n\n        // Adjust the content height and add a new page if necessary\n        contentHeight += componentPdfHeight + 10;\n        if (contentHeight > pageHeight) {\n          pdf.addPage();\n          contentHeight = 10;\n        }\n      });\n    }\n\n    // Save the PDF\n    setTimeout(() => { // setTimeout is used to wait for all the components to be loaded before saving the PDF\n      pdf.save('dashboard.pdf');\n    }, 1000);\n  });\n};\n\n\n\n\n\n\nconst Dashboard = () => {\n  return (\n    <div className=\"dashboard\">\n      \n      <div id=\"pdf-content\">\n      <h1>Analysis Report</h1>\n      <TopicwiseTopPerformers />\n        <ScoreDistribution />\n        <PassFailRate />\n        \n      </div>\n      <div className=\"button-container\">\n        <Link to=\"/scoreboard\"><button>Back</button></Link>\n        <button onClick={generatePdf}>Download PDF</button>\n        <Link to=\"/\"><button>Logout</button></Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}