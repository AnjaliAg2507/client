{"ast":null,"code":"import _toConsumableArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anjaliagrawal/Desktop/quiz/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*import React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scores = response.data.map(student => student.point);\n        const histogramData = calculateHistogramData(scores);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const calculateHistogramData = (scores) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const binCounts = new Array(bins.length - 1).fill(0);\n    for (const score of scores) {\n      for (let i = 1; i < bins.length; i++) {\n        if (score >= bins[i-1] && score < bins[i]) {\n          binCounts[i-1]++;\n          break;\n        }\n      }\n    }\n    const histogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count }));\n    return histogramData;\n  };\n  \n  const getUniqueRollNumbers = (data) => {\n    const rollNumbers = new Set();\n    data.forEach((student) => {\n      rollNumbers.add(student.roll_no);\n    });\n    return rollNumbers.size;\n  };\n  \n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.map(bin => bin.x)}\n          style={{\n            axis: { stroke: '#000' },\n            tickLabels: { fontSize: 12, padding: 5 },\n          }}\n        />\n        <VictoryBar\n          data={data}\n          x=\"x\"\n          y=\"y\"\n          style={{\n            data: { fill: \"#c43a31\" },\n            labels: { fontSize: 12, fontWeight: 'bold' },\n          }}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\nexport default ScoreDistribution;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\nvar ScoreDistribution = function ScoreDistribution() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  useEffect(function () {\n    axios.get('http://localhost:8000/api/result').then(function (response) {\n      var histogramData = calculateHistogramData(response.data);\n      setData(histogramData);\n      setIsLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n      setIsLoading(false);\n    });\n  }, []);\n  var calculateHistogramData = function calculateHistogramData(students) {\n    var topics = new Set(students.map(function (student) {\n      return student.topic;\n    }));\n    var bins = [0, 5, 10, 15, 20, 25];\n    var histogramData = [];\n    var _iterator = _createForOfIteratorHelper(topics),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var topic = _step.value;\n        var topicStudents = students.filter(function (student) {\n          return student.topic === topic;\n        });\n        var scores = topicStudents.map(function (student) {\n          return student.point;\n        });\n        var binCounts = new Array(bins.length - 1).fill(0);\n        var _iterator2 = _createForOfIteratorHelper(scores),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var score = _step2.value;\n            for (var i = 1; i < bins.length; i++) {\n              if (score >= bins[i - 1] && score < bins[i]) {\n                binCounts[i - 1]++;\n                break;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        var topicHistogramData = binCounts.map(function (count, i) {\n          return {\n            x: \"\".concat(bins[i], \"-\").concat(bins[i + 1]),\n            y: count,\n            topic: topic\n          };\n        });\n        histogramData.push.apply(histogramData, _toConsumableArray(topicHistogramData));\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return histogramData;\n  };\n  var getUniqueRollNumbers = function getUniqueRollNumbers(data) {\n    var rollNumbers = new Set();\n    data.forEach(function (student) {\n      rollNumbers.add(student.roll_no);\n    });\n    return rollNumbers.size;\n  };\n  var getMaxYValue = function getMaxYValue(data) {\n    var rollNumbersCount = getUniqueRollNumbers(data);\n    var maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    var tickCount = maxYValue / 5;\n    return {\n      maxYValue: maxYValue,\n      tickCount: tickCount\n    };\n  };\n  var _getMaxYValue = getMaxYValue(data),\n    maxYValue = _getMaxYValue.maxYValue,\n    tickCount = _getMaxYValue.tickCount;\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, \"Loading\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score-distribution\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, \"Topic Wise Score Distribution\"), /*#__PURE__*/React.createElement(VictoryChart, {\n    domainPadding: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VictoryAxis, {\n    dependentAxis: true,\n    label: \"No. of Students\",\n    tickValues: _toConsumableArray(Array(maxYValue / 5 + 1).keys()).map(function (i) {\n      return i * 5;\n    }),\n    tickFormat: function tickFormat(t) {\n      return \"\".concat(t);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(VictoryAxis, {\n    label: \"Score\",\n    tickValues: data.filter(function (d, i, arr) {\n      return arr.findIndex(function (t) {\n        return t.x === d.x;\n      }) === i;\n    }).map(function (bin) {\n      return bin.x;\n    }),\n    style: {\n      axis: {\n        stroke: '#000'\n      },\n      tickLabels: {\n        fontSize: 12,\n        padding: 5\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), data.filter(function (d, i, arr) {\n    return arr.findIndex(function (t) {\n      return t.x === d.x;\n    }) === i;\n  }).map(function (bin) {\n    return /*#__PURE__*/React.createElement(VictoryBar, {\n      key: bin.x,\n      data: data.filter(function (d) {\n        return d.x === bin.x;\n      }),\n      x: \"topic\",\n      y: \"y\",\n      style: {\n        data: {\n          fill: \"#c43a31\"\n        },\n        labels: {\n          fontSize: 12,\n          fontWeight: 'bold'\n        }\n      },\n      labelComponent: /*#__PURE__*/React.createElement(VictoryTooltip, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 1\n      }\n    });\n  })));\n};\nvar calculateHistogramData = function calculateHistogramData(scores) {\n  var topics = ['Maths', 'Science', 'History', 'Geography', 'English'];\n  var bins = [0, 5, 10, 15, 20, 25];\n  var binCounts = new Array(topics.length * (bins.length - 1)).fill(0);\n  var _iterator3 = _createForOfIteratorHelper(scores),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var score = _step3.value;\n      var topic = score.topic,\n        point = score.point;\n      var topicIndex = topics.indexOf(topic);\n      for (var i = 1; i < bins.length; i++) {\n        if (point >= bins[i - 1] && point < bins[i]) {\n          binCounts[topicIndex * (bins.length - 1) + (i - 1)]++;\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var histogramData = binCounts.map(function (count, i) {\n    return {\n      topic: topics[Math.floor(i / (bins.length - 1))],\n      x: \"\".concat(bins[i % (bins.length - 1)], \"-\").concat(bins[i % (bins.length - 1) + 1]),\n      y: count\n    };\n  });\n  return histogramData;\n};\nexport default ScoreDistribution;","map":{"version":3,"names":["React","useState","useEffect","VictoryChart","VictoryBar","VictoryAxis","VictoryTooltip","axios","ScoreDistribution","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","data","setData","get","then","response","histogramData","calculateHistogramData","catch","error","console","log","students","topics","Set","map","student","topic","bins","_iterator","_createForOfIteratorHelper","_step","_loop","value","topicStudents","filter","scores","point","binCounts","Array","length","fill","_iterator2","_step2","s","n","done","score","i","err","e","f","topicHistogramData","count","x","concat","y","push","apply","_toConsumableArray","getUniqueRollNumbers","rollNumbers","forEach","add","roll_no","size","getMaxYValue","rollNumbersCount","maxYValue","Math","ceil","tickCount","_getMaxYValue","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","domainPadding","dependentAxis","label","tickValues","keys","tickFormat","t","d","arr","findIndex","bin","style","axis","stroke","tickLabels","fontSize","padding","key","labels","fontWeight","labelComponent","_iterator3","_step3","topicIndex","indexOf","floor"],"sources":["/Users/anjaliagrawal/Desktop/quiz/client/src/components/ScoreDistribution.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const scores = response.data.map(student => student.point);\n        const histogramData = calculateHistogramData(scores);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const calculateHistogramData = (scores) => {\n    const bins = [0, 5, 10, 15, 20, 25];\n    const binCounts = new Array(bins.length - 1).fill(0);\n    for (const score of scores) {\n      for (let i = 1; i < bins.length; i++) {\n        if (score >= bins[i-1] && score < bins[i]) {\n          binCounts[i-1]++;\n          break;\n        }\n      }\n    }\n    const histogramData = binCounts.map((count, i) => ({ x: `${bins[i]}-${bins[i+1]}`, y: count }));\n    return histogramData;\n  };\n  \n  const getUniqueRollNumbers = (data) => {\n    const rollNumbers = new Set();\n    data.forEach((student) => {\n      rollNumbers.add(student.roll_no);\n    });\n    return rollNumbers.size;\n  };\n  \n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.map(bin => bin.x)}\n          style={{\n            axis: { stroke: '#000' },\n            tickLabels: { fontSize: 12, padding: 5 },\n          }}\n        />\n        <VictoryBar\n          data={data}\n          x=\"x\"\n          y=\"y\"\n          style={{\n            data: { fill: \"#c43a31\" },\n            labels: { fontSize: 12, fontWeight: 'bold' },\n          }}\n        />\n      </VictoryChart>\n    </div>\n  );\n};\nexport default ScoreDistribution;\n*/\nimport React, { useState, useEffect } from 'react';\nimport { VictoryChart, VictoryBar, VictoryAxis, VictoryTooltip } from 'victory';\nimport axios from 'axios';\nimport './styles/ScoreDistribution.css';\n\nconst ScoreDistribution = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/result')\n      .then(response => {\n        const histogramData = calculateHistogramData(response.data);\n        setData(histogramData);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const calculateHistogramData = (students) => {\n    const topics = new Set(students.map(student => student.topic));\n    const bins = [0, 5, 10, 15, 20, 25];\n    const histogramData = [];\n\n    for (const topic of topics) {\n      const topicStudents = students.filter(student => student.topic === topic);\n      const scores = topicStudents.map(student => student.point);\n      const binCounts = new Array(bins.length - 1).fill(0);\n\n      for (const score of scores) {\n        for (let i = 1; i < bins.length; i++) {\n          if (score >= bins[i-1] && score < bins[i]) {\n            binCounts[i-1]++;\n            break;\n          }\n        }\n      }\n\n      const topicHistogramData = binCounts.map((count, i) => ({\n        x: `${bins[i]}-${bins[i+1]}`,\n        y: count,\n        topic: topic\n      }));\n      \n      histogramData.push(...topicHistogramData);\n    }\n\n    return histogramData;\n  };\n  \n  const getUniqueRollNumbers = (data) => {\n    const rollNumbers = new Set();\n    data.forEach((student) => {\n      rollNumbers.add(student.roll_no);\n    });\n    return rollNumbers.size;\n  };\n  \n  const getMaxYValue = (data) => {\n    const rollNumbersCount = getUniqueRollNumbers(data);\n    const maxYValue = Math.ceil(rollNumbersCount / 10) * 10;\n    const tickCount = maxYValue / 5;\n    return { maxYValue, tickCount };\n  };\n\n  const { maxYValue, tickCount } = getMaxYValue(data);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <p>Loading</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-distribution\">\n      <h2>Topic Wise Score Distribution</h2>\n      <VictoryChart\n        domainPadding={20}\n      >\n        <VictoryAxis\n          dependentAxis\n          label=\"No. of Students\"\n          tickValues={[...Array(maxYValue / 5 + 1).keys()].map((i) => i * 5)}\n          tickFormat={(t) => `${t}`}\n        />\n        <VictoryAxis\n          label=\"Score\"\n          tickValues={data.filter((d, i, arr) => arr.findIndex(t => t.x === d.x) === i).map(bin => bin.x)}\n          style={{\n            axis: { stroke: '#000' },\n            tickLabels: { fontSize: 12, padding: 5 },\n            }}\n/>\n{data.filter((d, i, arr) => arr.findIndex(t => t.x === d.x) === i).map((bin) => (\n<VictoryBar\nkey={bin.x}\ndata={data.filter(d => d.x === bin.x)}\nx=\"topic\"\ny=\"y\"\nstyle={{\ndata: { fill: \"#c43a31\" },\nlabels: { fontSize: 12, fontWeight: 'bold' },\n}}\nlabelComponent={<VictoryTooltip />}\n/>\n))}\n</VictoryChart>\n</div>\n);\n};\n\nconst calculateHistogramData = (scores) => {\nconst topics = ['Maths', 'Science', 'History', 'Geography', 'English'];\nconst bins = [0, 5, 10, 15, 20, 25];\nconst binCounts = new Array(topics.length * (bins.length - 1)).fill(0);\nfor (const score of scores) {\nconst { topic, point } = score;\nconst topicIndex = topics.indexOf(topic);\nfor (let i = 1; i < bins.length; i++) {\nif (point >= bins[i-1] && point < bins[i]) {\nbinCounts[topicIndex * (bins.length - 1) + (i-1)]++;\nbreak;\n}\n}\n}\nconst histogramData = binCounts.map((count, i) => ({\ntopic: topics[Math.floor(i / (bins.length - 1))],\nx: `${bins[i % (bins.length - 1)]}-${bins[i % (bins.length - 1) + 1]}`,\n\ny: count,\n}));\nreturn histogramData;\n};\n\nexport default ScoreDistribution;\n         \n\n\n\n"],"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"},"metadata":{},"sourceType":"module"}